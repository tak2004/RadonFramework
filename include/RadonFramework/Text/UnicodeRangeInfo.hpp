#ifndef RF_TEXT_UNICODERANGEINFO_HPP
#define RF_TEXT_UNICODERANGEINFO_HPP
#if _MSC_VER > 1000
#pragma once
#endif

namespace RadonFramework { namespace Text {

enum class UnicodeRangeIdentifier;

class UnicodeRangeInfo
{
public:
    UnicodeRangeInfo();
    UnicodeRangeInfo(UnicodeRangeIdentifier Identifier, RF_Type::UInt32 Start,
        RF_Type::UInt32 End);
    const UnicodeRangeIdentifier Identifier()const;
    const RF_Type::UInt32 Start()const;
    const RF_Type::UInt32 End()const;
protected:
    UnicodeRangeIdentifier m_Identifier;
    RF_Type::UInt32 m_Start;
    RF_Type::UInt32 m_End;
};

enum class UnicodeRangeIdentifier
{
    BasicLatin,
    Latin1Supplement,
    LatinExtended_A,
    LatinExtended_B,
    IPAExtensions,
    PhoneticExtensions,
    PhoneticExtensionsSupplement,
    SpacingModifierLetters,
    ModifierToneLetters,
    CombiningDiacriticalMarks,
    CombiningDiacriticalMarksSupplement,
    GreekAndCoptic,
    Coptic,
    Cyrillic,
    CyrillicSupplement,
    CyrillicExtended_A,
    CyrillicExtended_B,
    Armenian,
    Hebrew,
    Vai,
    Arabic,
    ArabicSupplement,
    NKo,
    Devanagari,
    Bengali,
    Gurmukhi,
    Gujarati,
    Oriya,
    Tamil,
    Telugu,
    Kannada,
    Malayalam,
    Thai,
    Lao,
    Georgian,
    GeorgianSupplement,
    Balinese,
    HangulJamo,
    LatinExtendedAdditional,
    LatinExtended_C,
    LatinExtended_D,
    GreekExtended,
    GeneralPunctuation,
    SupplementalPunctuation,
    SuperscriptsAndSubscripts,
    CurrencySymbols,
    CombiningDiacriticalMarksForSymbols,
    LetterlikeSymbols,
    NumberForms,
    Arrows,
    SupplementalArrows_A,
    SupplementalArrows_B,
    MiscellaneousSymbolsAndArrows,
    MathematicalOperators,
    MiscellaneousMathematicalSymbols_A,
    MiscellaneousMathematicalSymbols_B,
    SupplementalMathematicalOperators,
    MiscellaneousTechnical,
    ControlPictures,
    OpticalCharacterRecognition,
    EnclosedAlphanumerics,
    BoxDrawing,
    BlockElements,
    GeometricShapes,
    MiscellaneousSymbols,
    Dingbats,
    CJKSymbolsAndPunctuation,
    Hiragana,
    Katakana,
    KatakanaPhoneticExtensions,
    Bopomofo,
    BopomofoExtended,
    HangulCompatibilityJamo,
    Phags_pa,
    EnclosedCJKLettersAndMonths,
    CJKCompatibility,
    HangulSyllables,
    NonPlane0,
    Phoenician,
    CJKRadicalsSupplement,
    KangxiRadicals,
    IdeographicDescriptionCharacters,
    Kanbun,
    CJKUnifiedIdeographsExtension_A,
    CJKUnifiedIdeographs,
    CJKUnifiedIdeographsExtension_B,
    PrivateUseArea,
    CJKStrokes,
    CJKCompatibilityIdeographs,
    CJKCompatibilityIdeographsSupplement,
    AlphabeticPresentationForms,
    ArabicPresentationForms_A,
    CombiningHalfMarks,
    VerticalForms,
    CJKCompatibilityForms,
    SmallFormVariants,
    ArabicPresentationForms_B,
    HalfwidthAndFullwidthForms,
    Specials,
    Tibetan,
    Syriac,
    Thaana,
    Sinhala,
    Myanmar,
    Ethiopic,
    EthiopicSupplement,
    EthiopicExtended,
    Cherokee,
    UnifiedCanadianAboriginalSyllabics,
    Ogham,
    Runic,
    Khmer,
    KhmerSymbols,
    Mongolian,
    BraillePatterns,
    YiSyllables,
    YiRadicals,
    Tagalog,
    Hanunoo,
    Buhid,
    Tagbanwa,
    OldItalic,
    Gothic,
    Deseret,
    ByzantineMusicalSymbols,
    MusicalSymbols,
    AncientGreekMusicalNotation,
    MathematicalAlphanumericSymbols,
    PrivateUsePlane15,
    PrivateUsePlane16,
    VariationSelectors,
    VariationSelectorsSupplement,
    Tags,
    Limbu,
    TaiLe,
    NewTaiLue,
    Buginese,
    Glagolitic,
    Tifinagh,
    YijingHexagramSymbols,
    SylotiNagri,
    LinearBSyllabary,
    LinearBIdeograms,
    AegeanNumbers,
    AncientGreekNumbers,
    Ugaritic,
    OldPersian,
    Shavian,
    Osmanya,
    CypriotSyllabary,
    Kharoshthi,
    TaiXuanJingSymbols,
    Cuneiform,
    CuneiformNumbersAndPunctuation,
    CountingRodNumerals,
    Sundanese,
    Lepcha,
    OlChiki,
    Saurashtra,
    KayahLi,
    Rejang,
    Cham,
    AncientSymbols,
    PhaistosDisc,
    Lycian,
    Carian,
    Lydian,
    MahjongTiles,
    DominoTiles
};

} }

#ifndef RF_SHORTHAND_NAMESPACE_TEXT
#define RF_SHORTHAND_NAMESPACE_TEXT
namespace RF_Text = RadonFramework::Text;
#endif // !RF_SHORTHAND_NAMESPACE_TEXT

#endif// RF_TEXT_UNICODERANGEINFO_HPP