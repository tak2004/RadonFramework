MACRO(FIND_RADONFRAMEWORK)

# - Find RadonFramwork
#  avaiable option: RADONFRAMEWORK_FIND_REQUIRED
#
#  RADONFRAMEWORK_INCLUDE_DIR - where to find Define.hpp
#  RADONFRAMEWORK_LIBRARY     - Librariy of RadonFramework.
#  RADONFRAMEWORK_FOUND       - true if RadonFramework was found

if(RADONFRAMEWORK_INCLUDE_DIR)
	SET(RADONFRAMEWORK_FIND_QUIETLY true)
endif (RADONFRAMEWORK_INCLUDE_DIR)

#  MESSAGE(STATUS "%RadonFrameworkLib% env var=$ENV{RadonFrameworkLib}")
#  MESSAGE(STATUS "%RadonFrameworkInclude% env var=$ENV{RadonFrameworkInclude}")

# search in include path
find_path(RADONFRAMEWORK_INCLUDE_DIR RadonFramework/Defines.hpp /usr/local/include /usr/include $ENV{RadonFrameworkInclude} ../../include)

FIND_LIBRARY(RADONFRAMEWORK_LIBRARY	NAMES RadonFramework RadonFrameworkD PATHS /usr/lib /usr/local/lib $ENV{RadonFrameworkLib} ../../dist/lib)

if (RADONFRAMEWORK_INCLUDE_DIR AND RADONFRAMEWORK_LIBRARY)
	set(RADONFRAMEWORK_FOUND true)
	set( RADONFRAMEWORK_LIBRARIES ${RADONFRAMEWORK_LIBRARY} )
else (RADONFRAMEWORK_INCLUDE_DIR AND RADONFRAMEWORK_LIBRARY)
	set(RADONFRAMEWORK_FOUND false)
	set( RADONFRAMEWORK_LIBRARIES )
endif (RADONFRAMEWORK_INCLUDE_DIR AND RADONFRAMEWORK_LIBRARY)

if(RADONFRAMEWORK_FOUND)
		MESSAGE(STATUS "Found RadonFramework: Yes")
else(RADONFRAMEWORK_FOUND)
	if(RADONFRAMEWORK_FIND_REQUIRED)
		MESSAGE(STATUS "Looked for RadonFramework libraries named ${RADONFRAMEWORK_LIBRARIES}.")
		MESSAGE(FATAL_ERROR "Could NOT find RadonFramework library")
	else(RADONFRAMEWORK_FIND_REQUIRED)
	    MESSAGE(STATUS "Looked for RadonFramework libraries named ${RADONFRAMEWORK_LIBRARIES}.")
	endif(RADONFRAMEWORK_FIND_REQUIRED)
endif(RADONFRAMEWORK_FOUND)

MARK_AS_ADVANCED(RADONFRAMEWORK_LIBRARY RADONFRAMEWORK_INCLUDE_DIR)

ENDMACRO(FIND_RADONFRAMEWORK)
