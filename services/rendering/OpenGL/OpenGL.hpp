#ifndef RF_SYSTEM_DRAWING_OPENGL_HPP
#define RF_SYSTEM_DRAWING_OPENGL_HPP
#if _MSC_VER > 1000
#pragma once
#endif

#include <OpenGLTypes.hpp>
#include <OpenGLConstants.hpp>

using glAccumCallback = void (*)(GLenum op,GLfloat value);
extern glAccumCallback glAccum;
using glActiveShaderProgramCallback = void (*)(GLuint pipeline,GLuint program);
extern glActiveShaderProgramCallback glActiveShaderProgram;
using glActiveTextureCallback = void (*)(GLenum texture);
extern glActiveTextureCallback glActiveTexture;
using glAlphaFuncCallback = void (*)(GLenum func,GLfloat ref);
extern glAlphaFuncCallback glAlphaFunc;
using glAreTexturesResidentCallback = GLboolean (*)(GLsizei n,const GLuint * textures,GLboolean * residences);
extern glAreTexturesResidentCallback glAreTexturesResident;
using glArrayElementCallback = void (*)(GLint i);
extern glArrayElementCallback glArrayElement;
using glAttachShaderCallback = void (*)(GLuint program,GLuint shader);
extern glAttachShaderCallback glAttachShader;
using glBeginCallback = void (*)(GLenum mode);
extern glBeginCallback glBegin;
using glBeginConditionalRenderCallback = void (*)(GLuint id,GLenum mode);
extern glBeginConditionalRenderCallback glBeginConditionalRender;
using glBeginQueryCallback = void (*)(GLenum target,GLuint id);
extern glBeginQueryCallback glBeginQuery;
using glBeginQueryIndexedCallback = void (*)(GLenum target,GLuint index,GLuint id);
extern glBeginQueryIndexedCallback glBeginQueryIndexed;
using glBeginTransformFeedbackCallback = void (*)(GLenum primitiveMode);
extern glBeginTransformFeedbackCallback glBeginTransformFeedback;
using glBindAttribLocationCallback = void (*)(GLuint program,GLuint index,const GLchar * name);
extern glBindAttribLocationCallback glBindAttribLocation;
using glBindBufferCallback = void (*)(GLenum target,GLuint buffer);
extern glBindBufferCallback glBindBuffer;
using glBindBufferBaseCallback = void (*)(GLenum target,GLuint index,GLuint buffer);
extern glBindBufferBaseCallback glBindBufferBase;
using glBindBufferRangeCallback = void (*)(GLenum target,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size);
extern glBindBufferRangeCallback glBindBufferRange;
using glBindBuffersBaseCallback = void (*)(GLenum target,GLuint first,GLsizei count,const GLuint * buffers);
extern glBindBuffersBaseCallback glBindBuffersBase;
using glBindBuffersRangeCallback = void (*)(GLenum target,GLuint first,GLsizei count,const GLuint * buffers,const GLintptr * offsets,const GLsizeiptr * sizes);
extern glBindBuffersRangeCallback glBindBuffersRange;
using glBindFragDataLocationCallback = void (*)(GLuint program,GLuint color,const GLchar * name);
extern glBindFragDataLocationCallback glBindFragDataLocation;
using glBindFragDataLocationIndexedCallback = void (*)(GLuint program,GLuint colorNumber,GLuint index,const GLchar * name);
extern glBindFragDataLocationIndexedCallback glBindFragDataLocationIndexed;
using glBindFramebufferCallback = void (*)(GLenum target,GLuint framebuffer);
extern glBindFramebufferCallback glBindFramebuffer;
using glBindImageTextureCallback = void (*)(GLuint unit,GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum access,GLenum format);
extern glBindImageTextureCallback glBindImageTexture;
using glBindImageTexturesCallback = void (*)(GLuint first,GLsizei count,const GLuint * textures);
extern glBindImageTexturesCallback glBindImageTextures;
using glBindProgramPipelineCallback = void (*)(GLuint pipeline);
extern glBindProgramPipelineCallback glBindProgramPipeline;
using glBindRenderbufferCallback = void (*)(GLenum target,GLuint renderbuffer);
extern glBindRenderbufferCallback glBindRenderbuffer;
using glBindSamplerCallback = void (*)(GLuint unit,GLuint sampler);
extern glBindSamplerCallback glBindSampler;
using glBindSamplersCallback = void (*)(GLuint first,GLsizei count,const GLuint * samplers);
extern glBindSamplersCallback glBindSamplers;
using glBindTextureCallback = void (*)(GLenum target,GLuint texture);
extern glBindTextureCallback glBindTexture;
using glBindTextureUnitCallback = void (*)(GLuint unit,GLuint texture);
extern glBindTextureUnitCallback glBindTextureUnit;
using glBindTexturesCallback = void (*)(GLuint first,GLsizei count,const GLuint * textures);
extern glBindTexturesCallback glBindTextures;
using glBindTransformFeedbackCallback = void (*)(GLenum target,GLuint id);
extern glBindTransformFeedbackCallback glBindTransformFeedback;
using glBindVertexArrayCallback = void (*)(GLuint array);
extern glBindVertexArrayCallback glBindVertexArray;
using glBindVertexBufferCallback = void (*)(GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride);
extern glBindVertexBufferCallback glBindVertexBuffer;
using glBindVertexBuffersCallback = void (*)(GLuint first,GLsizei count,const GLuint * buffers,const GLintptr * offsets,const GLsizei * strides);
extern glBindVertexBuffersCallback glBindVertexBuffers;
using glBitmapCallback = void (*)(GLsizei width,GLsizei height,GLfloat xorig,GLfloat yorig,GLfloat xmove,GLfloat ymove,const GLubyte * bitmap);
extern glBitmapCallback glBitmap;
using glBlendColorCallback = void (*)(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha);
extern glBlendColorCallback glBlendColor;
using glBlendEquationCallback = void (*)(GLenum mode);
extern glBlendEquationCallback glBlendEquation;
using glBlendEquationSeparateCallback = void (*)(GLenum modeRGB,GLenum modeAlpha);
extern glBlendEquationSeparateCallback glBlendEquationSeparate;
using glBlendEquationSeparateiCallback = void (*)(GLuint buf,GLenum modeRGB,GLenum modeAlpha);
extern glBlendEquationSeparateiCallback glBlendEquationSeparatei;
using glBlendEquationiCallback = void (*)(GLuint buf,GLenum mode);
extern glBlendEquationiCallback glBlendEquationi;
using glBlendFuncCallback = void (*)(GLenum sfactor,GLenum dfactor);
extern glBlendFuncCallback glBlendFunc;
using glBlendFuncSeparateCallback = void (*)(GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha);
extern glBlendFuncSeparateCallback glBlendFuncSeparate;
using glBlendFuncSeparateiCallback = void (*)(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha);
extern glBlendFuncSeparateiCallback glBlendFuncSeparatei;
using glBlendFunciCallback = void (*)(GLuint buf,GLenum src,GLenum dst);
extern glBlendFunciCallback glBlendFunci;
using glBlitFramebufferCallback = void (*)(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter);
extern glBlitFramebufferCallback glBlitFramebuffer;
using glBlitNamedFramebufferCallback = void (*)(GLuint readFramebuffer,GLuint drawFramebuffer,GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter);
extern glBlitNamedFramebufferCallback glBlitNamedFramebuffer;
using glBufferDataCallback = void (*)(GLenum target,GLsizeiptr size,const void * data,GLenum usage);
extern glBufferDataCallback glBufferData;
using glBufferStorageCallback = void (*)(GLenum target,GLsizeiptr size,const void * data,GLbitfield flags);
extern glBufferStorageCallback glBufferStorage;
using glBufferSubDataCallback = void (*)(GLenum target,GLintptr offset,GLsizeiptr size,const void * data);
extern glBufferSubDataCallback glBufferSubData;
using glCallListCallback = void (*)(GLuint list);
extern glCallListCallback glCallList;
using glCallListsCallback = void (*)(GLsizei n,GLenum type,const void * lists);
extern glCallListsCallback glCallLists;
using glCheckFramebufferStatusCallback = GLenum (*)(GLenum target);
extern glCheckFramebufferStatusCallback glCheckFramebufferStatus;
using glCheckNamedFramebufferStatusCallback = GLenum (*)(GLuint framebuffer,GLenum target);
extern glCheckNamedFramebufferStatusCallback glCheckNamedFramebufferStatus;
using glClampColorCallback = void (*)(GLenum target,GLenum clamp);
extern glClampColorCallback glClampColor;
using glClearCallback = void (*)(GLbitfield mask);
extern glClearCallback glClear;
using glClearAccumCallback = void (*)(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha);
extern glClearAccumCallback glClearAccum;
using glClearBufferDataCallback = void (*)(GLenum target,GLenum internalformat,GLenum format,GLenum type,const void * data);
extern glClearBufferDataCallback glClearBufferData;
using glClearBufferSubDataCallback = void (*)(GLenum target,GLenum internalformat,GLintptr offset,GLsizeiptr size,GLenum format,GLenum type,const void * data);
extern glClearBufferSubDataCallback glClearBufferSubData;
using glClearBufferfiCallback = void (*)(GLenum buffer,GLint drawbuffer,GLfloat depth,GLint stencil);
extern glClearBufferfiCallback glClearBufferfi;
using glClearBufferfvCallback = void (*)(GLenum buffer,GLint drawbuffer,const GLfloat * value);
extern glClearBufferfvCallback glClearBufferfv;
using glClearBufferivCallback = void (*)(GLenum buffer,GLint drawbuffer,const GLint * value);
extern glClearBufferivCallback glClearBufferiv;
using glClearBufferuivCallback = void (*)(GLenum buffer,GLint drawbuffer,const GLuint * value);
extern glClearBufferuivCallback glClearBufferuiv;
using glClearColorCallback = void (*)(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha);
extern glClearColorCallback glClearColor;
using glClearDepthCallback = void (*)(GLdouble depth);
extern glClearDepthCallback glClearDepth;
using glClearDepthfCallback = void (*)(GLfloat d);
extern glClearDepthfCallback glClearDepthf;
using glClearIndexCallback = void (*)(GLfloat c);
extern glClearIndexCallback glClearIndex;
using glClearNamedBufferDataCallback = void (*)(GLuint buffer,GLenum internalformat,GLenum format,GLenum type,const void * data);
extern glClearNamedBufferDataCallback glClearNamedBufferData;
using glClearNamedBufferSubDataCallback = void (*)(GLuint buffer,GLenum internalformat,GLintptr offset,GLsizei size,GLenum format,GLenum type,const void * data);
extern glClearNamedBufferSubDataCallback glClearNamedBufferSubData;
using glClearNamedFramebufferfiCallback = void (*)(GLuint framebuffer,GLenum buffer,const GLfloat depth,GLint stencil);
extern glClearNamedFramebufferfiCallback glClearNamedFramebufferfi;
using glClearNamedFramebufferfvCallback = void (*)(GLuint framebuffer,GLenum buffer,GLint drawbuffer,const GLfloat * value);
extern glClearNamedFramebufferfvCallback glClearNamedFramebufferfv;
using glClearNamedFramebufferivCallback = void (*)(GLuint framebuffer,GLenum buffer,GLint drawbuffer,const GLint * value);
extern glClearNamedFramebufferivCallback glClearNamedFramebufferiv;
using glClearNamedFramebufferuivCallback = void (*)(GLuint framebuffer,GLenum buffer,GLint drawbuffer,const GLuint * value);
extern glClearNamedFramebufferuivCallback glClearNamedFramebufferuiv;
using glClearStencilCallback = void (*)(GLint s);
extern glClearStencilCallback glClearStencil;
using glClearTexImageCallback = void (*)(GLuint texture,GLint level,GLenum format,GLenum type,const void * data);
extern glClearTexImageCallback glClearTexImage;
using glClearTexSubImageCallback = void (*)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * data);
extern glClearTexSubImageCallback glClearTexSubImage;
using glClientActiveTextureCallback = void (*)(GLenum texture);
extern glClientActiveTextureCallback glClientActiveTexture;
using glClientWaitSyncCallback = GLenum (*)(GLsync sync,GLbitfield flags,GLuint64 timeout);
extern glClientWaitSyncCallback glClientWaitSync;
using glClipControlCallback = void (*)(GLenum origin,GLenum depth);
extern glClipControlCallback glClipControl;
using glClipPlaneCallback = void (*)(GLenum plane,const GLdouble * equation);
extern glClipPlaneCallback glClipPlane;
using glColor3bCallback = void (*)(GLbyte red,GLbyte green,GLbyte blue);
extern glColor3bCallback glColor3b;
using glColor3bvCallback = void (*)(const GLbyte * v);
extern glColor3bvCallback glColor3bv;
using glColor3dCallback = void (*)(GLdouble red,GLdouble green,GLdouble blue);
extern glColor3dCallback glColor3d;
using glColor3dvCallback = void (*)(const GLdouble * v);
extern glColor3dvCallback glColor3dv;
using glColor3fCallback = void (*)(GLfloat red,GLfloat green,GLfloat blue);
extern glColor3fCallback glColor3f;
using glColor3fvCallback = void (*)(const GLfloat * v);
extern glColor3fvCallback glColor3fv;
using glColor3iCallback = void (*)(GLint red,GLint green,GLint blue);
extern glColor3iCallback glColor3i;
using glColor3ivCallback = void (*)(const GLint * v);
extern glColor3ivCallback glColor3iv;
using glColor3sCallback = void (*)(GLshort red,GLshort green,GLshort blue);
extern glColor3sCallback glColor3s;
using glColor3svCallback = void (*)(const GLshort * v);
extern glColor3svCallback glColor3sv;
using glColor3ubCallback = void (*)(GLubyte red,GLubyte green,GLubyte blue);
extern glColor3ubCallback glColor3ub;
using glColor3ubvCallback = void (*)(const GLubyte * v);
extern glColor3ubvCallback glColor3ubv;
using glColor3uiCallback = void (*)(GLuint red,GLuint green,GLuint blue);
extern glColor3uiCallback glColor3ui;
using glColor3uivCallback = void (*)(const GLuint * v);
extern glColor3uivCallback glColor3uiv;
using glColor3usCallback = void (*)(GLushort red,GLushort green,GLushort blue);
extern glColor3usCallback glColor3us;
using glColor3usvCallback = void (*)(const GLushort * v);
extern glColor3usvCallback glColor3usv;
using glColor4bCallback = void (*)(GLbyte red,GLbyte green,GLbyte blue,GLbyte alpha);
extern glColor4bCallback glColor4b;
using glColor4bvCallback = void (*)(const GLbyte * v);
extern glColor4bvCallback glColor4bv;
using glColor4dCallback = void (*)(GLdouble red,GLdouble green,GLdouble blue,GLdouble alpha);
extern glColor4dCallback glColor4d;
using glColor4dvCallback = void (*)(const GLdouble * v);
extern glColor4dvCallback glColor4dv;
using glColor4fCallback = void (*)(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha);
extern glColor4fCallback glColor4f;
using glColor4fvCallback = void (*)(const GLfloat * v);
extern glColor4fvCallback glColor4fv;
using glColor4iCallback = void (*)(GLint red,GLint green,GLint blue,GLint alpha);
extern glColor4iCallback glColor4i;
using glColor4ivCallback = void (*)(const GLint * v);
extern glColor4ivCallback glColor4iv;
using glColor4sCallback = void (*)(GLshort red,GLshort green,GLshort blue,GLshort alpha);
extern glColor4sCallback glColor4s;
using glColor4svCallback = void (*)(const GLshort * v);
extern glColor4svCallback glColor4sv;
using glColor4ubCallback = void (*)(GLubyte red,GLubyte green,GLubyte blue,GLubyte alpha);
extern glColor4ubCallback glColor4ub;
using glColor4ubvCallback = void (*)(const GLubyte * v);
extern glColor4ubvCallback glColor4ubv;
using glColor4uiCallback = void (*)(GLuint red,GLuint green,GLuint blue,GLuint alpha);
extern glColor4uiCallback glColor4ui;
using glColor4uivCallback = void (*)(const GLuint * v);
extern glColor4uivCallback glColor4uiv;
using glColor4usCallback = void (*)(GLushort red,GLushort green,GLushort blue,GLushort alpha);
extern glColor4usCallback glColor4us;
using glColor4usvCallback = void (*)(const GLushort * v);
extern glColor4usvCallback glColor4usv;
using glColorMaskCallback = void (*)(GLboolean red,GLboolean green,GLboolean blue,GLboolean alpha);
extern glColorMaskCallback glColorMask;
using glColorMaskiCallback = void (*)(GLuint index,GLboolean r,GLboolean g,GLboolean b,GLboolean a);
extern glColorMaskiCallback glColorMaski;
using glColorMaterialCallback = void (*)(GLenum face,GLenum mode);
extern glColorMaterialCallback glColorMaterial;
using glColorP3uiCallback = void (*)(GLenum type,GLuint color);
extern glColorP3uiCallback glColorP3ui;
using glColorP3uivCallback = void (*)(GLenum type,const GLuint * color);
extern glColorP3uivCallback glColorP3uiv;
using glColorP4uiCallback = void (*)(GLenum type,GLuint color);
extern glColorP4uiCallback glColorP4ui;
using glColorP4uivCallback = void (*)(GLenum type,const GLuint * color);
extern glColorP4uivCallback glColorP4uiv;
using glColorPointerCallback = void (*)(GLint size,GLenum type,GLsizei stride,const void * pointer);
extern glColorPointerCallback glColorPointer;
using glCompileShaderCallback = void (*)(GLuint shader);
extern glCompileShaderCallback glCompileShader;
using glCompressedTexImage1DCallback = void (*)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void * data);
extern glCompressedTexImage1DCallback glCompressedTexImage1D;
using glCompressedTexImage2DCallback = void (*)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void * data);
extern glCompressedTexImage2DCallback glCompressedTexImage2D;
using glCompressedTexImage3DCallback = void (*)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void * data);
extern glCompressedTexImage3DCallback glCompressedTexImage3D;
using glCompressedTexSubImage1DCallback = void (*)(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * data);
extern glCompressedTexSubImage1DCallback glCompressedTexSubImage1D;
using glCompressedTexSubImage2DCallback = void (*)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * data);
extern glCompressedTexSubImage2DCallback glCompressedTexSubImage2D;
using glCompressedTexSubImage3DCallback = void (*)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * data);
extern glCompressedTexSubImage3DCallback glCompressedTexSubImage3D;
using glCompressedTextureSubImage1DCallback = void (*)(GLuint texture,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * data);
extern glCompressedTextureSubImage1DCallback glCompressedTextureSubImage1D;
using glCompressedTextureSubImage2DCallback = void (*)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * data);
extern glCompressedTextureSubImage2DCallback glCompressedTextureSubImage2D;
using glCompressedTextureSubImage3DCallback = void (*)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * data);
extern glCompressedTextureSubImage3DCallback glCompressedTextureSubImage3D;
using glCopyBufferSubDataCallback = void (*)(GLenum readTarget,GLenum writeTarget,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size);
extern glCopyBufferSubDataCallback glCopyBufferSubData;
using glCopyImageSubDataCallback = void (*)(GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srcY,GLint srcZ,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei srcWidth,GLsizei srcHeight,GLsizei srcDepth);
extern glCopyImageSubDataCallback glCopyImageSubData;
using glCopyNamedBufferSubDataCallback = void (*)(GLuint readBuffer,GLuint writeBuffer,GLintptr readOffset,GLintptr writeOffset,GLsizei size);
extern glCopyNamedBufferSubDataCallback glCopyNamedBufferSubData;
using glCopyPixelsCallback = void (*)(GLint x,GLint y,GLsizei width,GLsizei height,GLenum type);
extern glCopyPixelsCallback glCopyPixels;
using glCopyTexImage1DCallback = void (*)(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border);
extern glCopyTexImage1DCallback glCopyTexImage1D;
using glCopyTexImage2DCallback = void (*)(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border);
extern glCopyTexImage2DCallback glCopyTexImage2D;
using glCopyTexSubImage1DCallback = void (*)(GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width);
extern glCopyTexSubImage1DCallback glCopyTexSubImage1D;
using glCopyTexSubImage2DCallback = void (*)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height);
extern glCopyTexSubImage2DCallback glCopyTexSubImage2D;
using glCopyTexSubImage3DCallback = void (*)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height);
extern glCopyTexSubImage3DCallback glCopyTexSubImage3D;
using glCopyTextureSubImage1DCallback = void (*)(GLuint texture,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width);
extern glCopyTextureSubImage1DCallback glCopyTextureSubImage1D;
using glCopyTextureSubImage2DCallback = void (*)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height);
extern glCopyTextureSubImage2DCallback glCopyTextureSubImage2D;
using glCopyTextureSubImage3DCallback = void (*)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height);
extern glCopyTextureSubImage3DCallback glCopyTextureSubImage3D;
using glCreateBuffersCallback = void (*)(GLsizei n,GLuint * buffers);
extern glCreateBuffersCallback glCreateBuffers;
using glCreateFramebuffersCallback = void (*)(GLsizei n,GLuint * framebuffers);
extern glCreateFramebuffersCallback glCreateFramebuffers;
using glCreateProgramCallback = GLuint (*)();
extern glCreateProgramCallback glCreateProgram;
using glCreateProgramPipelinesCallback = void (*)(GLsizei n,GLuint * pipelines);
extern glCreateProgramPipelinesCallback glCreateProgramPipelines;
using glCreateQueriesCallback = void (*)(GLenum target,GLsizei n,GLuint * ids);
extern glCreateQueriesCallback glCreateQueries;
using glCreateRenderbuffersCallback = void (*)(GLsizei n,GLuint * renderbuffers);
extern glCreateRenderbuffersCallback glCreateRenderbuffers;
using glCreateSamplersCallback = void (*)(GLsizei n,GLuint * samplers);
extern glCreateSamplersCallback glCreateSamplers;
using glCreateShaderCallback = GLuint (*)(GLenum type);
extern glCreateShaderCallback glCreateShader;
using glCreateShaderProgramvCallback = GLuint (*)(GLenum type,GLsizei count,const GLchar *const* strings);
extern glCreateShaderProgramvCallback glCreateShaderProgramv;
using glCreateTexturesCallback = void (*)(GLenum target,GLsizei n,GLuint * textures);
extern glCreateTexturesCallback glCreateTextures;
using glCreateTransformFeedbacksCallback = void (*)(GLsizei n,GLuint * ids);
extern glCreateTransformFeedbacksCallback glCreateTransformFeedbacks;
using glCreateVertexArraysCallback = void (*)(GLsizei n,GLuint * arrays);
extern glCreateVertexArraysCallback glCreateVertexArrays;
using glCullFaceCallback = void (*)(GLenum mode);
extern glCullFaceCallback glCullFace;
using glDebugMessageCallbackCallback = void (*)(GLDEBUGPROC callback,const void * userParam);
extern glDebugMessageCallbackCallback glDebugMessageCallback;
using glDebugMessageControlCallback = void (*)(GLenum source,GLenum type,GLenum severity,GLsizei count,const GLuint * ids,GLboolean enabled);
extern glDebugMessageControlCallback glDebugMessageControl;
using glDebugMessageInsertCallback = void (*)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * buf);
extern glDebugMessageInsertCallback glDebugMessageInsert;
using glDeleteBuffersCallback = void (*)(GLsizei n,const GLuint * buffers);
extern glDeleteBuffersCallback glDeleteBuffers;
using glDeleteFramebuffersCallback = void (*)(GLsizei n,const GLuint * framebuffers);
extern glDeleteFramebuffersCallback glDeleteFramebuffers;
using glDeleteListsCallback = void (*)(GLuint list,GLsizei range);
extern glDeleteListsCallback glDeleteLists;
using glDeleteProgramCallback = void (*)(GLuint program);
extern glDeleteProgramCallback glDeleteProgram;
using glDeleteProgramPipelinesCallback = void (*)(GLsizei n,const GLuint * pipelines);
extern glDeleteProgramPipelinesCallback glDeleteProgramPipelines;
using glDeleteQueriesCallback = void (*)(GLsizei n,const GLuint * ids);
extern glDeleteQueriesCallback glDeleteQueries;
using glDeleteRenderbuffersCallback = void (*)(GLsizei n,const GLuint * renderbuffers);
extern glDeleteRenderbuffersCallback glDeleteRenderbuffers;
using glDeleteSamplersCallback = void (*)(GLsizei count,const GLuint * samplers);
extern glDeleteSamplersCallback glDeleteSamplers;
using glDeleteShaderCallback = void (*)(GLuint shader);
extern glDeleteShaderCallback glDeleteShader;
using glDeleteSyncCallback = void (*)(GLsync sync);
extern glDeleteSyncCallback glDeleteSync;
using glDeleteTexturesCallback = void (*)(GLsizei n,const GLuint * textures);
extern glDeleteTexturesCallback glDeleteTextures;
using glDeleteTransformFeedbacksCallback = void (*)(GLsizei n,const GLuint * ids);
extern glDeleteTransformFeedbacksCallback glDeleteTransformFeedbacks;
using glDeleteVertexArraysCallback = void (*)(GLsizei n,const GLuint * arrays);
extern glDeleteVertexArraysCallback glDeleteVertexArrays;
using glDepthFuncCallback = void (*)(GLenum func);
extern glDepthFuncCallback glDepthFunc;
using glDepthMaskCallback = void (*)(GLboolean flag);
extern glDepthMaskCallback glDepthMask;
using glDepthRangeCallback = void (*)(GLdouble near,GLdouble far);
extern glDepthRangeCallback glDepthRange;
using glDepthRangeArrayvCallback = void (*)(GLuint first,GLsizei count,const GLdouble * v);
extern glDepthRangeArrayvCallback glDepthRangeArrayv;
using glDepthRangeIndexedCallback = void (*)(GLuint index,GLdouble n,GLdouble f);
extern glDepthRangeIndexedCallback glDepthRangeIndexed;
using glDepthRangefCallback = void (*)(GLfloat n,GLfloat f);
extern glDepthRangefCallback glDepthRangef;
using glDetachShaderCallback = void (*)(GLuint program,GLuint shader);
extern glDetachShaderCallback glDetachShader;
using glDisableCallback = void (*)(GLenum cap);
extern glDisableCallback glDisable;
using glDisableClientStateCallback = void (*)(GLenum array);
extern glDisableClientStateCallback glDisableClientState;
using glDisableVertexArrayAttribCallback = void (*)(GLuint vaobj,GLuint index);
extern glDisableVertexArrayAttribCallback glDisableVertexArrayAttrib;
using glDisableVertexAttribArrayCallback = void (*)(GLuint index);
extern glDisableVertexAttribArrayCallback glDisableVertexAttribArray;
using glDisableiCallback = void (*)(GLenum target,GLuint index);
extern glDisableiCallback glDisablei;
using glDispatchComputeCallback = void (*)(GLuint num_groups_x,GLuint num_groups_y,GLuint num_groups_z);
extern glDispatchComputeCallback glDispatchCompute;
using glDispatchComputeIndirectCallback = void (*)(GLintptr indirect);
extern glDispatchComputeIndirectCallback glDispatchComputeIndirect;
using glDrawArraysCallback = void (*)(GLenum mode,GLint first,GLsizei count);
extern glDrawArraysCallback glDrawArrays;
using glDrawArraysIndirectCallback = void (*)(GLenum mode,const void * indirect);
extern glDrawArraysIndirectCallback glDrawArraysIndirect;
using glDrawArraysInstancedCallback = void (*)(GLenum mode,GLint first,GLsizei count,GLsizei instancecount);
extern glDrawArraysInstancedCallback glDrawArraysInstanced;
using glDrawArraysInstancedBaseInstanceCallback = void (*)(GLenum mode,GLint first,GLsizei count,GLsizei instancecount,GLuint baseinstance);
extern glDrawArraysInstancedBaseInstanceCallback glDrawArraysInstancedBaseInstance;
using glDrawBufferCallback = void (*)(GLenum buf);
extern glDrawBufferCallback glDrawBuffer;
using glDrawBuffersCallback = void (*)(GLsizei n,const GLenum * bufs);
extern glDrawBuffersCallback glDrawBuffers;
using glDrawElementsCallback = void (*)(GLenum mode,GLsizei count,GLenum type,const void * indices);
extern glDrawElementsCallback glDrawElements;
using glDrawElementsBaseVertexCallback = void (*)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLint basevertex);
extern glDrawElementsBaseVertexCallback glDrawElementsBaseVertex;
using glDrawElementsIndirectCallback = void (*)(GLenum mode,GLenum type,const void * indirect);
extern glDrawElementsIndirectCallback glDrawElementsIndirect;
using glDrawElementsInstancedCallback = void (*)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount);
extern glDrawElementsInstancedCallback glDrawElementsInstanced;
using glDrawElementsInstancedBaseInstanceCallback = void (*)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount,GLuint baseinstance);
extern glDrawElementsInstancedBaseInstanceCallback glDrawElementsInstancedBaseInstance;
using glDrawElementsInstancedBaseVertexCallback = void (*)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount,GLint basevertex);
extern glDrawElementsInstancedBaseVertexCallback glDrawElementsInstancedBaseVertex;
using glDrawElementsInstancedBaseVertexBaseInstanceCallback = void (*)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount,GLint basevertex,GLuint baseinstance);
extern glDrawElementsInstancedBaseVertexBaseInstanceCallback glDrawElementsInstancedBaseVertexBaseInstance;
using glDrawPixelsCallback = void (*)(GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels);
extern glDrawPixelsCallback glDrawPixels;
using glDrawRangeElementsCallback = void (*)(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void * indices);
extern glDrawRangeElementsCallback glDrawRangeElements;
using glDrawRangeElementsBaseVertexCallback = void (*)(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void * indices,GLint basevertex);
extern glDrawRangeElementsBaseVertexCallback glDrawRangeElementsBaseVertex;
using glDrawTransformFeedbackCallback = void (*)(GLenum mode,GLuint id);
extern glDrawTransformFeedbackCallback glDrawTransformFeedback;
using glDrawTransformFeedbackInstancedCallback = void (*)(GLenum mode,GLuint id,GLsizei instancecount);
extern glDrawTransformFeedbackInstancedCallback glDrawTransformFeedbackInstanced;
using glDrawTransformFeedbackStreamCallback = void (*)(GLenum mode,GLuint id,GLuint stream);
extern glDrawTransformFeedbackStreamCallback glDrawTransformFeedbackStream;
using glDrawTransformFeedbackStreamInstancedCallback = void (*)(GLenum mode,GLuint id,GLuint stream,GLsizei instancecount);
extern glDrawTransformFeedbackStreamInstancedCallback glDrawTransformFeedbackStreamInstanced;
using glEdgeFlagCallback = void (*)(GLboolean flag);
extern glEdgeFlagCallback glEdgeFlag;
using glEdgeFlagPointerCallback = void (*)(GLsizei stride,const void * pointer);
extern glEdgeFlagPointerCallback glEdgeFlagPointer;
using glEdgeFlagvCallback = void (*)(const GLboolean * flag);
extern glEdgeFlagvCallback glEdgeFlagv;
using glEnableCallback = void (*)(GLenum cap);
extern glEnableCallback glEnable;
using glEnableClientStateCallback = void (*)(GLenum array);
extern glEnableClientStateCallback glEnableClientState;
using glEnableVertexArrayAttribCallback = void (*)(GLuint vaobj,GLuint index);
extern glEnableVertexArrayAttribCallback glEnableVertexArrayAttrib;
using glEnableVertexAttribArrayCallback = void (*)(GLuint index);
extern glEnableVertexAttribArrayCallback glEnableVertexAttribArray;
using glEnableiCallback = void (*)(GLenum target,GLuint index);
extern glEnableiCallback glEnablei;
using glEndCallback = void (*)();
extern glEndCallback glEnd;
using glEndConditionalRenderCallback = void (*)();
extern glEndConditionalRenderCallback glEndConditionalRender;
using glEndListCallback = void (*)();
extern glEndListCallback glEndList;
using glEndQueryCallback = void (*)(GLenum target);
extern glEndQueryCallback glEndQuery;
using glEndQueryIndexedCallback = void (*)(GLenum target,GLuint index);
extern glEndQueryIndexedCallback glEndQueryIndexed;
using glEndTransformFeedbackCallback = void (*)();
extern glEndTransformFeedbackCallback glEndTransformFeedback;
using glEvalCoord1dCallback = void (*)(GLdouble u);
extern glEvalCoord1dCallback glEvalCoord1d;
using glEvalCoord1dvCallback = void (*)(const GLdouble * u);
extern glEvalCoord1dvCallback glEvalCoord1dv;
using glEvalCoord1fCallback = void (*)(GLfloat u);
extern glEvalCoord1fCallback glEvalCoord1f;
using glEvalCoord1fvCallback = void (*)(const GLfloat * u);
extern glEvalCoord1fvCallback glEvalCoord1fv;
using glEvalCoord2dCallback = void (*)(GLdouble u,GLdouble v);
extern glEvalCoord2dCallback glEvalCoord2d;
using glEvalCoord2dvCallback = void (*)(const GLdouble * u);
extern glEvalCoord2dvCallback glEvalCoord2dv;
using glEvalCoord2fCallback = void (*)(GLfloat u,GLfloat v);
extern glEvalCoord2fCallback glEvalCoord2f;
using glEvalCoord2fvCallback = void (*)(const GLfloat * u);
extern glEvalCoord2fvCallback glEvalCoord2fv;
using glEvalMesh1Callback = void (*)(GLenum mode,GLint i1,GLint i2);
extern glEvalMesh1Callback glEvalMesh1;
using glEvalMesh2Callback = void (*)(GLenum mode,GLint i1,GLint i2,GLint j1,GLint j2);
extern glEvalMesh2Callback glEvalMesh2;
using glEvalPoint1Callback = void (*)(GLint i);
extern glEvalPoint1Callback glEvalPoint1;
using glEvalPoint2Callback = void (*)(GLint i,GLint j);
extern glEvalPoint2Callback glEvalPoint2;
using glFeedbackBufferCallback = void (*)(GLsizei size,GLenum type,GLfloat * buffer);
extern glFeedbackBufferCallback glFeedbackBuffer;
using glFenceSyncCallback = GLsync (*)(GLenum condition,GLbitfield flags);
extern glFenceSyncCallback glFenceSync;
using glFinishCallback = void (*)();
extern glFinishCallback glFinish;
using glFlushCallback = void (*)();
extern glFlushCallback glFlush;
using glFlushMappedBufferRangeCallback = void (*)(GLenum target,GLintptr offset,GLsizeiptr length);
extern glFlushMappedBufferRangeCallback glFlushMappedBufferRange;
using glFlushMappedNamedBufferRangeCallback = void (*)(GLuint buffer,GLintptr offset,GLsizei length);
extern glFlushMappedNamedBufferRangeCallback glFlushMappedNamedBufferRange;
using glFogCoordPointerCallback = void (*)(GLenum type,GLsizei stride,const void * pointer);
extern glFogCoordPointerCallback glFogCoordPointer;
using glFogCoorddCallback = void (*)(GLdouble coord);
extern glFogCoorddCallback glFogCoordd;
using glFogCoorddvCallback = void (*)(const GLdouble * coord);
extern glFogCoorddvCallback glFogCoorddv;
using glFogCoordfCallback = void (*)(GLfloat coord);
extern glFogCoordfCallback glFogCoordf;
using glFogCoordfvCallback = void (*)(const GLfloat * coord);
extern glFogCoordfvCallback glFogCoordfv;
using glFogfCallback = void (*)(GLenum pname,GLfloat param);
extern glFogfCallback glFogf;
using glFogfvCallback = void (*)(GLenum pname,const GLfloat * params);
extern glFogfvCallback glFogfv;
using glFogiCallback = void (*)(GLenum pname,GLint param);
extern glFogiCallback glFogi;
using glFogivCallback = void (*)(GLenum pname,const GLint * params);
extern glFogivCallback glFogiv;
using glFramebufferParameteriCallback = void (*)(GLenum target,GLenum pname,GLint param);
extern glFramebufferParameteriCallback glFramebufferParameteri;
using glFramebufferRenderbufferCallback = void (*)(GLenum target,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer);
extern glFramebufferRenderbufferCallback glFramebufferRenderbuffer;
using glFramebufferTextureCallback = void (*)(GLenum target,GLenum attachment,GLuint texture,GLint level);
extern glFramebufferTextureCallback glFramebufferTexture;
using glFramebufferTexture1DCallback = void (*)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level);
extern glFramebufferTexture1DCallback glFramebufferTexture1D;
using glFramebufferTexture2DCallback = void (*)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level);
extern glFramebufferTexture2DCallback glFramebufferTexture2D;
using glFramebufferTexture3DCallback = void (*)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset);
extern glFramebufferTexture3DCallback glFramebufferTexture3D;
using glFramebufferTextureLayerCallback = void (*)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer);
extern glFramebufferTextureLayerCallback glFramebufferTextureLayer;
using glFrontFaceCallback = void (*)(GLenum mode);
extern glFrontFaceCallback glFrontFace;
using glFrustumCallback = void (*)(GLdouble left,GLdouble right,GLdouble bottom,GLdouble top,GLdouble zNear,GLdouble zFar);
extern glFrustumCallback glFrustum;
using glGenBuffersCallback = void (*)(GLsizei n,GLuint * buffers);
extern glGenBuffersCallback glGenBuffers;
using glGenFramebuffersCallback = void (*)(GLsizei n,GLuint * framebuffers);
extern glGenFramebuffersCallback glGenFramebuffers;
using glGenListsCallback = GLuint (*)(GLsizei range);
extern glGenListsCallback glGenLists;
using glGenProgramPipelinesCallback = void (*)(GLsizei n,GLuint * pipelines);
extern glGenProgramPipelinesCallback glGenProgramPipelines;
using glGenQueriesCallback = void (*)(GLsizei n,GLuint * ids);
extern glGenQueriesCallback glGenQueries;
using glGenRenderbuffersCallback = void (*)(GLsizei n,GLuint * renderbuffers);
extern glGenRenderbuffersCallback glGenRenderbuffers;
using glGenSamplersCallback = void (*)(GLsizei count,GLuint * samplers);
extern glGenSamplersCallback glGenSamplers;
using glGenTexturesCallback = void (*)(GLsizei n,GLuint * textures);
extern glGenTexturesCallback glGenTextures;
using glGenTransformFeedbacksCallback = void (*)(GLsizei n,GLuint * ids);
extern glGenTransformFeedbacksCallback glGenTransformFeedbacks;
using glGenVertexArraysCallback = void (*)(GLsizei n,GLuint * arrays);
extern glGenVertexArraysCallback glGenVertexArrays;
using glGenerateMipmapCallback = void (*)(GLenum target);
extern glGenerateMipmapCallback glGenerateMipmap;
using glGenerateTextureMipmapCallback = void (*)(GLuint texture);
extern glGenerateTextureMipmapCallback glGenerateTextureMipmap;
using glGetActiveAtomicCounterBufferivCallback = void (*)(GLuint program,GLuint bufferIndex,GLenum pname,GLint * params);
extern glGetActiveAtomicCounterBufferivCallback glGetActiveAtomicCounterBufferiv;
using glGetActiveAttribCallback = void (*)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLint * size,GLenum * type,GLchar * name);
extern glGetActiveAttribCallback glGetActiveAttrib;
using glGetActiveSubroutineNameCallback = void (*)(GLuint program,GLenum shadertype,GLuint index,GLsizei bufsize,GLsizei * length,GLchar * name);
extern glGetActiveSubroutineNameCallback glGetActiveSubroutineName;
using glGetActiveSubroutineUniformNameCallback = void (*)(GLuint program,GLenum shadertype,GLuint index,GLsizei bufsize,GLsizei * length,GLchar * name);
extern glGetActiveSubroutineUniformNameCallback glGetActiveSubroutineUniformName;
using glGetActiveSubroutineUniformivCallback = void (*)(GLuint program,GLenum shadertype,GLuint index,GLenum pname,GLint * values);
extern glGetActiveSubroutineUniformivCallback glGetActiveSubroutineUniformiv;
using glGetActiveUniformCallback = void (*)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLint * size,GLenum * type,GLchar * name);
extern glGetActiveUniformCallback glGetActiveUniform;
using glGetActiveUniformBlockNameCallback = void (*)(GLuint program,GLuint uniformBlockIndex,GLsizei bufSize,GLsizei * length,GLchar * uniformBlockName);
extern glGetActiveUniformBlockNameCallback glGetActiveUniformBlockName;
using glGetActiveUniformBlockivCallback = void (*)(GLuint program,GLuint uniformBlockIndex,GLenum pname,GLint * params);
extern glGetActiveUniformBlockivCallback glGetActiveUniformBlockiv;
using glGetActiveUniformNameCallback = void (*)(GLuint program,GLuint uniformIndex,GLsizei bufSize,GLsizei * length,GLchar * uniformName);
extern glGetActiveUniformNameCallback glGetActiveUniformName;
using glGetActiveUniformsivCallback = void (*)(GLuint program,GLsizei uniformCount,const GLuint * uniformIndices,GLenum pname,GLint * params);
extern glGetActiveUniformsivCallback glGetActiveUniformsiv;
using glGetAttachedShadersCallback = void (*)(GLuint program,GLsizei maxCount,GLsizei * count,GLuint * shaders);
extern glGetAttachedShadersCallback glGetAttachedShaders;
using glGetAttribLocationCallback = GLint (*)(GLuint program,const GLchar * name);
extern glGetAttribLocationCallback glGetAttribLocation;
using glGetBooleani_vCallback = void (*)(GLenum target,GLuint index,GLboolean * data);
extern glGetBooleani_vCallback glGetBooleani_v;
using glGetBooleanvCallback = void (*)(GLenum pname,GLboolean * data);
extern glGetBooleanvCallback glGetBooleanv;
using glGetBufferParameteri64vCallback = void (*)(GLenum target,GLenum pname,GLint64 * params);
extern glGetBufferParameteri64vCallback glGetBufferParameteri64v;
using glGetBufferParameterivCallback = void (*)(GLenum target,GLenum pname,GLint * params);
extern glGetBufferParameterivCallback glGetBufferParameteriv;
using glGetBufferPointervCallback = void (*)(GLenum target,GLenum pname,void ** params);
extern glGetBufferPointervCallback glGetBufferPointerv;
using glGetBufferSubDataCallback = void (*)(GLenum target,GLintptr offset,GLsizeiptr size,void * data);
extern glGetBufferSubDataCallback glGetBufferSubData;
using glGetClipPlaneCallback = void (*)(GLenum plane,GLdouble * equation);
extern glGetClipPlaneCallback glGetClipPlane;
using glGetCompressedTexImageCallback = void (*)(GLenum target,GLint level,void * img);
extern glGetCompressedTexImageCallback glGetCompressedTexImage;
using glGetCompressedTextureImageCallback = void (*)(GLuint texture,GLint level,GLsizei bufSize,void * pixels);
extern glGetCompressedTextureImageCallback glGetCompressedTextureImage;
using glGetCompressedTextureSubImageCallback = void (*)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLsizei bufSize,void * pixels);
extern glGetCompressedTextureSubImageCallback glGetCompressedTextureSubImage;
using glGetDebugMessageLogCallback = GLuint (*)(GLuint count,GLsizei bufSize,GLenum * sources,GLenum * types,GLuint * ids,GLenum * severities,GLsizei * lengths,GLchar * messageLog);
extern glGetDebugMessageLogCallback glGetDebugMessageLog;
using glGetDoublei_vCallback = void (*)(GLenum target,GLuint index,GLdouble * data);
extern glGetDoublei_vCallback glGetDoublei_v;
using glGetDoublevCallback = void (*)(GLenum pname,GLdouble * data);
extern glGetDoublevCallback glGetDoublev;
using glGetErrorCallback = GLenum (*)();
extern glGetErrorCallback glGetError;
using glGetFloati_vCallback = void (*)(GLenum target,GLuint index,GLfloat * data);
extern glGetFloati_vCallback glGetFloati_v;
using glGetFloatvCallback = void (*)(GLenum pname,GLfloat * data);
extern glGetFloatvCallback glGetFloatv;
using glGetFragDataIndexCallback = GLint (*)(GLuint program,const GLchar * name);
extern glGetFragDataIndexCallback glGetFragDataIndex;
using glGetFragDataLocationCallback = GLint (*)(GLuint program,const GLchar * name);
extern glGetFragDataLocationCallback glGetFragDataLocation;
using glGetFramebufferAttachmentParameterivCallback = void (*)(GLenum target,GLenum attachment,GLenum pname,GLint * params);
extern glGetFramebufferAttachmentParameterivCallback glGetFramebufferAttachmentParameteriv;
using glGetFramebufferParameterivCallback = void (*)(GLenum target,GLenum pname,GLint * params);
extern glGetFramebufferParameterivCallback glGetFramebufferParameteriv;
using glGetGraphicsResetStatusCallback = GLenum (*)();
extern glGetGraphicsResetStatusCallback glGetGraphicsResetStatus;
using glGetInteger64i_vCallback = void (*)(GLenum target,GLuint index,GLint64 * data);
extern glGetInteger64i_vCallback glGetInteger64i_v;
using glGetInteger64vCallback = void (*)(GLenum pname,GLint64 * data);
extern glGetInteger64vCallback glGetInteger64v;
using glGetIntegeri_vCallback = void (*)(GLenum target,GLuint index,GLint * data);
extern glGetIntegeri_vCallback glGetIntegeri_v;
using glGetIntegervCallback = void (*)(GLenum pname,GLint * data);
extern glGetIntegervCallback glGetIntegerv;
using glGetInternalformati64vCallback = void (*)(GLenum target,GLenum internalformat,GLenum pname,GLsizei bufSize,GLint64 * params);
extern glGetInternalformati64vCallback glGetInternalformati64v;
using glGetInternalformativCallback = void (*)(GLenum target,GLenum internalformat,GLenum pname,GLsizei bufSize,GLint * params);
extern glGetInternalformativCallback glGetInternalformativ;
using glGetLightfvCallback = void (*)(GLenum light,GLenum pname,GLfloat * params);
extern glGetLightfvCallback glGetLightfv;
using glGetLightivCallback = void (*)(GLenum light,GLenum pname,GLint * params);
extern glGetLightivCallback glGetLightiv;
using glGetMapdvCallback = void (*)(GLenum target,GLenum query,GLdouble * v);
extern glGetMapdvCallback glGetMapdv;
using glGetMapfvCallback = void (*)(GLenum target,GLenum query,GLfloat * v);
extern glGetMapfvCallback glGetMapfv;
using glGetMapivCallback = void (*)(GLenum target,GLenum query,GLint * v);
extern glGetMapivCallback glGetMapiv;
using glGetMaterialfvCallback = void (*)(GLenum face,GLenum pname,GLfloat * params);
extern glGetMaterialfvCallback glGetMaterialfv;
using glGetMaterialivCallback = void (*)(GLenum face,GLenum pname,GLint * params);
extern glGetMaterialivCallback glGetMaterialiv;
using glGetMultisamplefvCallback = void (*)(GLenum pname,GLuint index,GLfloat * val);
extern glGetMultisamplefvCallback glGetMultisamplefv;
using glGetNamedBufferParameteri64vCallback = void (*)(GLuint buffer,GLenum pname,GLint64 * params);
extern glGetNamedBufferParameteri64vCallback glGetNamedBufferParameteri64v;
using glGetNamedBufferParameterivCallback = void (*)(GLuint buffer,GLenum pname,GLint * params);
extern glGetNamedBufferParameterivCallback glGetNamedBufferParameteriv;
using glGetNamedBufferPointervCallback = void (*)(GLuint buffer,GLenum pname,void ** params);
extern glGetNamedBufferPointervCallback glGetNamedBufferPointerv;
using glGetNamedBufferSubDataCallback = void (*)(GLuint buffer,GLintptr offset,GLsizei size,void * data);
extern glGetNamedBufferSubDataCallback glGetNamedBufferSubData;
using glGetNamedFramebufferAttachmentParameterivCallback = void (*)(GLuint framebuffer,GLenum attachment,GLenum pname,GLint * params);
extern glGetNamedFramebufferAttachmentParameterivCallback glGetNamedFramebufferAttachmentParameteriv;
using glGetNamedFramebufferParameterivCallback = void (*)(GLuint framebuffer,GLenum pname,GLint * param);
extern glGetNamedFramebufferParameterivCallback glGetNamedFramebufferParameteriv;
using glGetNamedRenderbufferParameterivCallback = void (*)(GLuint renderbuffer,GLenum pname,GLint * params);
extern glGetNamedRenderbufferParameterivCallback glGetNamedRenderbufferParameteriv;
using glGetObjectLabelCallback = void (*)(GLenum identifier,GLuint name,GLsizei bufSize,GLsizei * length,GLchar * label);
extern glGetObjectLabelCallback glGetObjectLabel;
using glGetObjectPtrLabelCallback = void (*)(const void * ptr,GLsizei bufSize,GLsizei * length,GLchar * label);
extern glGetObjectPtrLabelCallback glGetObjectPtrLabel;
using glGetPixelMapfvCallback = void (*)(GLenum map,GLfloat * values);
extern glGetPixelMapfvCallback glGetPixelMapfv;
using glGetPixelMapuivCallback = void (*)(GLenum map,GLuint * values);
extern glGetPixelMapuivCallback glGetPixelMapuiv;
using glGetPixelMapusvCallback = void (*)(GLenum map,GLushort * values);
extern glGetPixelMapusvCallback glGetPixelMapusv;
using glGetPointervCallback = void (*)(GLenum pname,void ** params);
extern glGetPointervCallback glGetPointerv;
using glGetPolygonStippleCallback = void (*)(GLubyte * mask);
extern glGetPolygonStippleCallback glGetPolygonStipple;
using glGetProgramBinaryCallback = void (*)(GLuint program,GLsizei bufSize,GLsizei * length,GLenum * binaryFormat,void * binary);
extern glGetProgramBinaryCallback glGetProgramBinary;
using glGetProgramInfoLogCallback = void (*)(GLuint program,GLsizei bufSize,GLsizei * length,GLchar * infoLog);
extern glGetProgramInfoLogCallback glGetProgramInfoLog;
using glGetProgramInterfaceivCallback = void (*)(GLuint program,GLenum programInterface,GLenum pname,GLint * params);
extern glGetProgramInterfaceivCallback glGetProgramInterfaceiv;
using glGetProgramPipelineInfoLogCallback = void (*)(GLuint pipeline,GLsizei bufSize,GLsizei * length,GLchar * infoLog);
extern glGetProgramPipelineInfoLogCallback glGetProgramPipelineInfoLog;
using glGetProgramPipelineivCallback = void (*)(GLuint pipeline,GLenum pname,GLint * params);
extern glGetProgramPipelineivCallback glGetProgramPipelineiv;
using glGetProgramResourceIndexCallback = GLuint (*)(GLuint program,GLenum programInterface,const GLchar * name);
extern glGetProgramResourceIndexCallback glGetProgramResourceIndex;
using glGetProgramResourceLocationCallback = GLint (*)(GLuint program,GLenum programInterface,const GLchar * name);
extern glGetProgramResourceLocationCallback glGetProgramResourceLocation;
using glGetProgramResourceLocationIndexCallback = GLint (*)(GLuint program,GLenum programInterface,const GLchar * name);
extern glGetProgramResourceLocationIndexCallback glGetProgramResourceLocationIndex;
using glGetProgramResourceNameCallback = void (*)(GLuint program,GLenum programInterface,GLuint index,GLsizei bufSize,GLsizei * length,GLchar * name);
extern glGetProgramResourceNameCallback glGetProgramResourceName;
using glGetProgramResourceivCallback = void (*)(GLuint program,GLenum programInterface,GLuint index,GLsizei propCount,const GLenum * props,GLsizei bufSize,GLsizei * length,GLint * params);
extern glGetProgramResourceivCallback glGetProgramResourceiv;
using glGetProgramStageivCallback = void (*)(GLuint program,GLenum shadertype,GLenum pname,GLint * values);
extern glGetProgramStageivCallback glGetProgramStageiv;
using glGetProgramivCallback = void (*)(GLuint program,GLenum pname,GLint * params);
extern glGetProgramivCallback glGetProgramiv;
using glGetQueryIndexedivCallback = void (*)(GLenum target,GLuint index,GLenum pname,GLint * params);
extern glGetQueryIndexedivCallback glGetQueryIndexediv;
using glGetQueryObjecti64vCallback = void (*)(GLuint id,GLenum pname,GLint64 * params);
extern glGetQueryObjecti64vCallback glGetQueryObjecti64v;
using glGetQueryObjectivCallback = void (*)(GLuint id,GLenum pname,GLint * params);
extern glGetQueryObjectivCallback glGetQueryObjectiv;
using glGetQueryObjectui64vCallback = void (*)(GLuint id,GLenum pname,GLuint64 * params);
extern glGetQueryObjectui64vCallback glGetQueryObjectui64v;
using glGetQueryObjectuivCallback = void (*)(GLuint id,GLenum pname,GLuint * params);
extern glGetQueryObjectuivCallback glGetQueryObjectuiv;
using glGetQueryivCallback = void (*)(GLenum target,GLenum pname,GLint * params);
extern glGetQueryivCallback glGetQueryiv;
using glGetRenderbufferParameterivCallback = void (*)(GLenum target,GLenum pname,GLint * params);
extern glGetRenderbufferParameterivCallback glGetRenderbufferParameteriv;
using glGetSamplerParameterIivCallback = void (*)(GLuint sampler,GLenum pname,GLint * params);
extern glGetSamplerParameterIivCallback glGetSamplerParameterIiv;
using glGetSamplerParameterIuivCallback = void (*)(GLuint sampler,GLenum pname,GLuint * params);
extern glGetSamplerParameterIuivCallback glGetSamplerParameterIuiv;
using glGetSamplerParameterfvCallback = void (*)(GLuint sampler,GLenum pname,GLfloat * params);
extern glGetSamplerParameterfvCallback glGetSamplerParameterfv;
using glGetSamplerParameterivCallback = void (*)(GLuint sampler,GLenum pname,GLint * params);
extern glGetSamplerParameterivCallback glGetSamplerParameteriv;
using glGetShaderInfoLogCallback = void (*)(GLuint shader,GLsizei bufSize,GLsizei * length,GLchar * infoLog);
extern glGetShaderInfoLogCallback glGetShaderInfoLog;
using glGetShaderPrecisionFormatCallback = void (*)(GLenum shadertype,GLenum precisiontype,GLint * range,GLint * precision);
extern glGetShaderPrecisionFormatCallback glGetShaderPrecisionFormat;
using glGetShaderSourceCallback = void (*)(GLuint shader,GLsizei bufSize,GLsizei * length,GLchar * source);
extern glGetShaderSourceCallback glGetShaderSource;
using glGetShaderivCallback = void (*)(GLuint shader,GLenum pname,GLint * params);
extern glGetShaderivCallback glGetShaderiv;
using glGetStringCallback = const GLubyte* (*)(GLenum name);
extern glGetStringCallback glGetString;
using glGetStringiCallback = const GLubyte* (*)(GLenum name,GLuint index);
extern glGetStringiCallback glGetStringi;
using glGetSubroutineIndexCallback = GLuint (*)(GLuint program,GLenum shadertype,const GLchar * name);
extern glGetSubroutineIndexCallback glGetSubroutineIndex;
using glGetSubroutineUniformLocationCallback = GLint (*)(GLuint program,GLenum shadertype,const GLchar * name);
extern glGetSubroutineUniformLocationCallback glGetSubroutineUniformLocation;
using glGetSyncivCallback = void (*)(GLsync sync,GLenum pname,GLsizei bufSize,GLsizei * length,GLint * values);
extern glGetSyncivCallback glGetSynciv;
using glGetTexEnvfvCallback = void (*)(GLenum target,GLenum pname,GLfloat * params);
extern glGetTexEnvfvCallback glGetTexEnvfv;
using glGetTexEnvivCallback = void (*)(GLenum target,GLenum pname,GLint * params);
extern glGetTexEnvivCallback glGetTexEnviv;
using glGetTexGendvCallback = void (*)(GLenum coord,GLenum pname,GLdouble * params);
extern glGetTexGendvCallback glGetTexGendv;
using glGetTexGenfvCallback = void (*)(GLenum coord,GLenum pname,GLfloat * params);
extern glGetTexGenfvCallback glGetTexGenfv;
using glGetTexGenivCallback = void (*)(GLenum coord,GLenum pname,GLint * params);
extern glGetTexGenivCallback glGetTexGeniv;
using glGetTexImageCallback = void (*)(GLenum target,GLint level,GLenum format,GLenum type,void * pixels);
extern glGetTexImageCallback glGetTexImage;
using glGetTexLevelParameterfvCallback = void (*)(GLenum target,GLint level,GLenum pname,GLfloat * params);
extern glGetTexLevelParameterfvCallback glGetTexLevelParameterfv;
using glGetTexLevelParameterivCallback = void (*)(GLenum target,GLint level,GLenum pname,GLint * params);
extern glGetTexLevelParameterivCallback glGetTexLevelParameteriv;
using glGetTexParameterIivCallback = void (*)(GLenum target,GLenum pname,GLint * params);
extern glGetTexParameterIivCallback glGetTexParameterIiv;
using glGetTexParameterIuivCallback = void (*)(GLenum target,GLenum pname,GLuint * params);
extern glGetTexParameterIuivCallback glGetTexParameterIuiv;
using glGetTexParameterfvCallback = void (*)(GLenum target,GLenum pname,GLfloat * params);
extern glGetTexParameterfvCallback glGetTexParameterfv;
using glGetTexParameterivCallback = void (*)(GLenum target,GLenum pname,GLint * params);
extern glGetTexParameterivCallback glGetTexParameteriv;
using glGetTextureImageCallback = void (*)(GLuint texture,GLint level,GLenum format,GLenum type,GLsizei bufSize,void * pixels);
extern glGetTextureImageCallback glGetTextureImage;
using glGetTextureLevelParameterfvCallback = void (*)(GLuint texture,GLint level,GLenum pname,GLfloat * params);
extern glGetTextureLevelParameterfvCallback glGetTextureLevelParameterfv;
using glGetTextureLevelParameterivCallback = void (*)(GLuint texture,GLint level,GLenum pname,GLint * params);
extern glGetTextureLevelParameterivCallback glGetTextureLevelParameteriv;
using glGetTextureParameterIivCallback = void (*)(GLuint texture,GLenum pname,GLint * params);
extern glGetTextureParameterIivCallback glGetTextureParameterIiv;
using glGetTextureParameterIuivCallback = void (*)(GLuint texture,GLenum pname,GLuint * params);
extern glGetTextureParameterIuivCallback glGetTextureParameterIuiv;
using glGetTextureParameterfvCallback = void (*)(GLuint texture,GLenum pname,GLfloat * params);
extern glGetTextureParameterfvCallback glGetTextureParameterfv;
using glGetTextureParameterivCallback = void (*)(GLuint texture,GLenum pname,GLint * params);
extern glGetTextureParameterivCallback glGetTextureParameteriv;
using glGetTextureSubImageCallback = void (*)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,GLsizei bufSize,void * pixels);
extern glGetTextureSubImageCallback glGetTextureSubImage;
using glGetTransformFeedbackVaryingCallback = void (*)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLsizei * size,GLenum * type,GLchar * name);
extern glGetTransformFeedbackVaryingCallback glGetTransformFeedbackVarying;
using glGetTransformFeedbacki64_vCallback = void (*)(GLuint xfb,GLenum pname,GLuint index,GLint64 * param);
extern glGetTransformFeedbacki64_vCallback glGetTransformFeedbacki64_v;
using glGetTransformFeedbacki_vCallback = void (*)(GLuint xfb,GLenum pname,GLuint index,GLint * param);
extern glGetTransformFeedbacki_vCallback glGetTransformFeedbacki_v;
using glGetTransformFeedbackivCallback = void (*)(GLuint xfb,GLenum pname,GLint * param);
extern glGetTransformFeedbackivCallback glGetTransformFeedbackiv;
using glGetUniformBlockIndexCallback = GLuint (*)(GLuint program,const GLchar * uniformBlockName);
extern glGetUniformBlockIndexCallback glGetUniformBlockIndex;
using glGetUniformIndicesCallback = void (*)(GLuint program,GLsizei uniformCount,const GLchar *const* uniformNames,GLuint * uniformIndices);
extern glGetUniformIndicesCallback glGetUniformIndices;
using glGetUniformLocationCallback = GLint (*)(GLuint program,const GLchar * name);
extern glGetUniformLocationCallback glGetUniformLocation;
using glGetUniformSubroutineuivCallback = void (*)(GLenum shadertype,GLint location,GLuint * params);
extern glGetUniformSubroutineuivCallback glGetUniformSubroutineuiv;
using glGetUniformdvCallback = void (*)(GLuint program,GLint location,GLdouble * params);
extern glGetUniformdvCallback glGetUniformdv;
using glGetUniformfvCallback = void (*)(GLuint program,GLint location,GLfloat * params);
extern glGetUniformfvCallback glGetUniformfv;
using glGetUniformivCallback = void (*)(GLuint program,GLint location,GLint * params);
extern glGetUniformivCallback glGetUniformiv;
using glGetUniformuivCallback = void (*)(GLuint program,GLint location,GLuint * params);
extern glGetUniformuivCallback glGetUniformuiv;
using glGetVertexArrayIndexed64ivCallback = void (*)(GLuint vaobj,GLuint index,GLenum pname,GLint64 * param);
extern glGetVertexArrayIndexed64ivCallback glGetVertexArrayIndexed64iv;
using glGetVertexArrayIndexedivCallback = void (*)(GLuint vaobj,GLuint index,GLenum pname,GLint * param);
extern glGetVertexArrayIndexedivCallback glGetVertexArrayIndexediv;
using glGetVertexArrayivCallback = void (*)(GLuint vaobj,GLenum pname,GLint * param);
extern glGetVertexArrayivCallback glGetVertexArrayiv;
using glGetVertexAttribIivCallback = void (*)(GLuint index,GLenum pname,GLint * params);
extern glGetVertexAttribIivCallback glGetVertexAttribIiv;
using glGetVertexAttribIuivCallback = void (*)(GLuint index,GLenum pname,GLuint * params);
extern glGetVertexAttribIuivCallback glGetVertexAttribIuiv;
using glGetVertexAttribLdvCallback = void (*)(GLuint index,GLenum pname,GLdouble * params);
extern glGetVertexAttribLdvCallback glGetVertexAttribLdv;
using glGetVertexAttribPointervCallback = void (*)(GLuint index,GLenum pname,void ** pointer);
extern glGetVertexAttribPointervCallback glGetVertexAttribPointerv;
using glGetVertexAttribdvCallback = void (*)(GLuint index,GLenum pname,GLdouble * params);
extern glGetVertexAttribdvCallback glGetVertexAttribdv;
using glGetVertexAttribfvCallback = void (*)(GLuint index,GLenum pname,GLfloat * params);
extern glGetVertexAttribfvCallback glGetVertexAttribfv;
using glGetVertexAttribivCallback = void (*)(GLuint index,GLenum pname,GLint * params);
extern glGetVertexAttribivCallback glGetVertexAttribiv;
using glGetnColorTableCallback = void (*)(GLenum target,GLenum format,GLenum type,GLsizei bufSize,void * table);
extern glGetnColorTableCallback glGetnColorTable;
using glGetnCompressedTexImageCallback = void (*)(GLenum target,GLint lod,GLsizei bufSize,void * pixels);
extern glGetnCompressedTexImageCallback glGetnCompressedTexImage;
using glGetnConvolutionFilterCallback = void (*)(GLenum target,GLenum format,GLenum type,GLsizei bufSize,void * image);
extern glGetnConvolutionFilterCallback glGetnConvolutionFilter;
using glGetnHistogramCallback = void (*)(GLenum target,GLboolean reset,GLenum format,GLenum type,GLsizei bufSize,void * values);
extern glGetnHistogramCallback glGetnHistogram;
using glGetnMapdvCallback = void (*)(GLenum target,GLenum query,GLsizei bufSize,GLdouble * v);
extern glGetnMapdvCallback glGetnMapdv;
using glGetnMapfvCallback = void (*)(GLenum target,GLenum query,GLsizei bufSize,GLfloat * v);
extern glGetnMapfvCallback glGetnMapfv;
using glGetnMapivCallback = void (*)(GLenum target,GLenum query,GLsizei bufSize,GLint * v);
extern glGetnMapivCallback glGetnMapiv;
using glGetnMinmaxCallback = void (*)(GLenum target,GLboolean reset,GLenum format,GLenum type,GLsizei bufSize,void * values);
extern glGetnMinmaxCallback glGetnMinmax;
using glGetnPixelMapfvCallback = void (*)(GLenum map,GLsizei bufSize,GLfloat * values);
extern glGetnPixelMapfvCallback glGetnPixelMapfv;
using glGetnPixelMapuivCallback = void (*)(GLenum map,GLsizei bufSize,GLuint * values);
extern glGetnPixelMapuivCallback glGetnPixelMapuiv;
using glGetnPixelMapusvCallback = void (*)(GLenum map,GLsizei bufSize,GLushort * values);
extern glGetnPixelMapusvCallback glGetnPixelMapusv;
using glGetnPolygonStippleCallback = void (*)(GLsizei bufSize,GLubyte * pattern);
extern glGetnPolygonStippleCallback glGetnPolygonStipple;
using glGetnSeparableFilterCallback = void (*)(GLenum target,GLenum format,GLenum type,GLsizei rowBufSize,void * row,GLsizei columnBufSize,void * column,void * span);
extern glGetnSeparableFilterCallback glGetnSeparableFilter;
using glGetnTexImageCallback = void (*)(GLenum target,GLint level,GLenum format,GLenum type,GLsizei bufSize,void * pixels);
extern glGetnTexImageCallback glGetnTexImage;
using glGetnUniformdvCallback = void (*)(GLuint program,GLint location,GLsizei bufSize,GLdouble * params);
extern glGetnUniformdvCallback glGetnUniformdv;
using glGetnUniformfvCallback = void (*)(GLuint program,GLint location,GLsizei bufSize,GLfloat * params);
extern glGetnUniformfvCallback glGetnUniformfv;
using glGetnUniformivCallback = void (*)(GLuint program,GLint location,GLsizei bufSize,GLint * params);
extern glGetnUniformivCallback glGetnUniformiv;
using glGetnUniformuivCallback = void (*)(GLuint program,GLint location,GLsizei bufSize,GLuint * params);
extern glGetnUniformuivCallback glGetnUniformuiv;
using glHintCallback = void (*)(GLenum target,GLenum mode);
extern glHintCallback glHint;
using glIndexMaskCallback = void (*)(GLuint mask);
extern glIndexMaskCallback glIndexMask;
using glIndexPointerCallback = void (*)(GLenum type,GLsizei stride,const void * pointer);
extern glIndexPointerCallback glIndexPointer;
using glIndexdCallback = void (*)(GLdouble c);
extern glIndexdCallback glIndexd;
using glIndexdvCallback = void (*)(const GLdouble * c);
extern glIndexdvCallback glIndexdv;
using glIndexfCallback = void (*)(GLfloat c);
extern glIndexfCallback glIndexf;
using glIndexfvCallback = void (*)(const GLfloat * c);
extern glIndexfvCallback glIndexfv;
using glIndexiCallback = void (*)(GLint c);
extern glIndexiCallback glIndexi;
using glIndexivCallback = void (*)(const GLint * c);
extern glIndexivCallback glIndexiv;
using glIndexsCallback = void (*)(GLshort c);
extern glIndexsCallback glIndexs;
using glIndexsvCallback = void (*)(const GLshort * c);
extern glIndexsvCallback glIndexsv;
using glIndexubCallback = void (*)(GLubyte c);
extern glIndexubCallback glIndexub;
using glIndexubvCallback = void (*)(const GLubyte * c);
extern glIndexubvCallback glIndexubv;
using glInitNamesCallback = void (*)();
extern glInitNamesCallback glInitNames;
using glInterleavedArraysCallback = void (*)(GLenum format,GLsizei stride,const void * pointer);
extern glInterleavedArraysCallback glInterleavedArrays;
using glInvalidateBufferDataCallback = void (*)(GLuint buffer);
extern glInvalidateBufferDataCallback glInvalidateBufferData;
using glInvalidateBufferSubDataCallback = void (*)(GLuint buffer,GLintptr offset,GLsizeiptr length);
extern glInvalidateBufferSubDataCallback glInvalidateBufferSubData;
using glInvalidateFramebufferCallback = void (*)(GLenum target,GLsizei numAttachments,const GLenum * attachments);
extern glInvalidateFramebufferCallback glInvalidateFramebuffer;
using glInvalidateNamedFramebufferDataCallback = void (*)(GLuint framebuffer,GLsizei numAttachments,const GLenum * attachments);
extern glInvalidateNamedFramebufferDataCallback glInvalidateNamedFramebufferData;
using glInvalidateNamedFramebufferSubDataCallback = void (*)(GLuint framebuffer,GLsizei numAttachments,const GLenum * attachments,GLint x,GLint y,GLsizei width,GLsizei height);
extern glInvalidateNamedFramebufferSubDataCallback glInvalidateNamedFramebufferSubData;
using glInvalidateSubFramebufferCallback = void (*)(GLenum target,GLsizei numAttachments,const GLenum * attachments,GLint x,GLint y,GLsizei width,GLsizei height);
extern glInvalidateSubFramebufferCallback glInvalidateSubFramebuffer;
using glInvalidateTexImageCallback = void (*)(GLuint texture,GLint level);
extern glInvalidateTexImageCallback glInvalidateTexImage;
using glInvalidateTexSubImageCallback = void (*)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth);
extern glInvalidateTexSubImageCallback glInvalidateTexSubImage;
using glIsBufferCallback = GLboolean (*)(GLuint buffer);
extern glIsBufferCallback glIsBuffer;
using glIsEnabledCallback = GLboolean (*)(GLenum cap);
extern glIsEnabledCallback glIsEnabled;
using glIsEnablediCallback = GLboolean (*)(GLenum target,GLuint index);
extern glIsEnablediCallback glIsEnabledi;
using glIsFramebufferCallback = GLboolean (*)(GLuint framebuffer);
extern glIsFramebufferCallback glIsFramebuffer;
using glIsListCallback = GLboolean (*)(GLuint list);
extern glIsListCallback glIsList;
using glIsProgramCallback = GLboolean (*)(GLuint program);
extern glIsProgramCallback glIsProgram;
using glIsProgramPipelineCallback = GLboolean (*)(GLuint pipeline);
extern glIsProgramPipelineCallback glIsProgramPipeline;
using glIsQueryCallback = GLboolean (*)(GLuint id);
extern glIsQueryCallback glIsQuery;
using glIsRenderbufferCallback = GLboolean (*)(GLuint renderbuffer);
extern glIsRenderbufferCallback glIsRenderbuffer;
using glIsSamplerCallback = GLboolean (*)(GLuint sampler);
extern glIsSamplerCallback glIsSampler;
using glIsShaderCallback = GLboolean (*)(GLuint shader);
extern glIsShaderCallback glIsShader;
using glIsSyncCallback = GLboolean (*)(GLsync sync);
extern glIsSyncCallback glIsSync;
using glIsTextureCallback = GLboolean (*)(GLuint texture);
extern glIsTextureCallback glIsTexture;
using glIsTransformFeedbackCallback = GLboolean (*)(GLuint id);
extern glIsTransformFeedbackCallback glIsTransformFeedback;
using glIsVertexArrayCallback = GLboolean (*)(GLuint array);
extern glIsVertexArrayCallback glIsVertexArray;
using glLightModelfCallback = void (*)(GLenum pname,GLfloat param);
extern glLightModelfCallback glLightModelf;
using glLightModelfvCallback = void (*)(GLenum pname,const GLfloat * params);
extern glLightModelfvCallback glLightModelfv;
using glLightModeliCallback = void (*)(GLenum pname,GLint param);
extern glLightModeliCallback glLightModeli;
using glLightModelivCallback = void (*)(GLenum pname,const GLint * params);
extern glLightModelivCallback glLightModeliv;
using glLightfCallback = void (*)(GLenum light,GLenum pname,GLfloat param);
extern glLightfCallback glLightf;
using glLightfvCallback = void (*)(GLenum light,GLenum pname,const GLfloat * params);
extern glLightfvCallback glLightfv;
using glLightiCallback = void (*)(GLenum light,GLenum pname,GLint param);
extern glLightiCallback glLighti;
using glLightivCallback = void (*)(GLenum light,GLenum pname,const GLint * params);
extern glLightivCallback glLightiv;
using glLineStippleCallback = void (*)(GLint factor,GLushort pattern);
extern glLineStippleCallback glLineStipple;
using glLineWidthCallback = void (*)(GLfloat width);
extern glLineWidthCallback glLineWidth;
using glLinkProgramCallback = void (*)(GLuint program);
extern glLinkProgramCallback glLinkProgram;
using glListBaseCallback = void (*)(GLuint base);
extern glListBaseCallback glListBase;
using glLoadIdentityCallback = void (*)();
extern glLoadIdentityCallback glLoadIdentity;
using glLoadMatrixdCallback = void (*)(const GLdouble * m);
extern glLoadMatrixdCallback glLoadMatrixd;
using glLoadMatrixfCallback = void (*)(const GLfloat * m);
extern glLoadMatrixfCallback glLoadMatrixf;
using glLoadNameCallback = void (*)(GLuint name);
extern glLoadNameCallback glLoadName;
using glLoadTransposeMatrixdCallback = void (*)(const GLdouble * m);
extern glLoadTransposeMatrixdCallback glLoadTransposeMatrixd;
using glLoadTransposeMatrixfCallback = void (*)(const GLfloat * m);
extern glLoadTransposeMatrixfCallback glLoadTransposeMatrixf;
using glLogicOpCallback = void (*)(GLenum opcode);
extern glLogicOpCallback glLogicOp;
using glMap1dCallback = void (*)(GLenum target,GLdouble u1,GLdouble u2,GLint stride,GLint order,const GLdouble * points);
extern glMap1dCallback glMap1d;
using glMap1fCallback = void (*)(GLenum target,GLfloat u1,GLfloat u2,GLint stride,GLint order,const GLfloat * points);
extern glMap1fCallback glMap1f;
using glMap2dCallback = void (*)(GLenum target,GLdouble u1,GLdouble u2,GLint ustride,GLint uorder,GLdouble v1,GLdouble v2,GLint vstride,GLint vorder,const GLdouble * points);
extern glMap2dCallback glMap2d;
using glMap2fCallback = void (*)(GLenum target,GLfloat u1,GLfloat u2,GLint ustride,GLint uorder,GLfloat v1,GLfloat v2,GLint vstride,GLint vorder,const GLfloat * points);
extern glMap2fCallback glMap2f;
using glMapBufferCallback = void (*)(GLenum target,GLenum access);
extern glMapBufferCallback glMapBuffer;
using glMapBufferRangeCallback = void (*)(GLenum target,GLintptr offset,GLsizeiptr length,GLbitfield access);
extern glMapBufferRangeCallback glMapBufferRange;
using glMapGrid1dCallback = void (*)(GLint un,GLdouble u1,GLdouble u2);
extern glMapGrid1dCallback glMapGrid1d;
using glMapGrid1fCallback = void (*)(GLint un,GLfloat u1,GLfloat u2);
extern glMapGrid1fCallback glMapGrid1f;
using glMapGrid2dCallback = void (*)(GLint un,GLdouble u1,GLdouble u2,GLint vn,GLdouble v1,GLdouble v2);
extern glMapGrid2dCallback glMapGrid2d;
using glMapGrid2fCallback = void (*)(GLint un,GLfloat u1,GLfloat u2,GLint vn,GLfloat v1,GLfloat v2);
extern glMapGrid2fCallback glMapGrid2f;
using glMapNamedBufferCallback = void (*)(GLuint buffer,GLenum access);
extern glMapNamedBufferCallback glMapNamedBuffer;
using glMapNamedBufferRangeCallback = void (*)(GLuint buffer,GLintptr offset,GLsizei length,GLbitfield access);
extern glMapNamedBufferRangeCallback glMapNamedBufferRange;
using glMaterialfCallback = void (*)(GLenum face,GLenum pname,GLfloat param);
extern glMaterialfCallback glMaterialf;
using glMaterialfvCallback = void (*)(GLenum face,GLenum pname,const GLfloat * params);
extern glMaterialfvCallback glMaterialfv;
using glMaterialiCallback = void (*)(GLenum face,GLenum pname,GLint param);
extern glMaterialiCallback glMateriali;
using glMaterialivCallback = void (*)(GLenum face,GLenum pname,const GLint * params);
extern glMaterialivCallback glMaterialiv;
using glMatrixModeCallback = void (*)(GLenum mode);
extern glMatrixModeCallback glMatrixMode;
using glMemoryBarrierCallback = void (*)(GLbitfield barriers);
extern glMemoryBarrierCallback glMemoryBarrier;
using glMemoryBarrierByRegionCallback = void (*)(GLbitfield barriers);
extern glMemoryBarrierByRegionCallback glMemoryBarrierByRegion;
using glMinSampleShadingCallback = void (*)(GLfloat value);
extern glMinSampleShadingCallback glMinSampleShading;
using glMultMatrixdCallback = void (*)(const GLdouble * m);
extern glMultMatrixdCallback glMultMatrixd;
using glMultMatrixfCallback = void (*)(const GLfloat * m);
extern glMultMatrixfCallback glMultMatrixf;
using glMultTransposeMatrixdCallback = void (*)(const GLdouble * m);
extern glMultTransposeMatrixdCallback glMultTransposeMatrixd;
using glMultTransposeMatrixfCallback = void (*)(const GLfloat * m);
extern glMultTransposeMatrixfCallback glMultTransposeMatrixf;
using glMultiDrawArraysCallback = void (*)(GLenum mode,const GLint * first,const GLsizei * count,GLsizei drawcount);
extern glMultiDrawArraysCallback glMultiDrawArrays;
using glMultiDrawArraysIndirectCallback = void (*)(GLenum mode,const void * indirect,GLsizei drawcount,GLsizei stride);
extern glMultiDrawArraysIndirectCallback glMultiDrawArraysIndirect;
using glMultiDrawElementsCallback = void (*)(GLenum mode,const GLsizei * count,GLenum type,const void *const* indices,GLsizei drawcount);
extern glMultiDrawElementsCallback glMultiDrawElements;
using glMultiDrawElementsBaseVertexCallback = void (*)(GLenum mode,const GLsizei * count,GLenum type,const void *const* indices,GLsizei drawcount,const GLint * basevertex);
extern glMultiDrawElementsBaseVertexCallback glMultiDrawElementsBaseVertex;
using glMultiDrawElementsIndirectCallback = void (*)(GLenum mode,GLenum type,const void * indirect,GLsizei drawcount,GLsizei stride);
extern glMultiDrawElementsIndirectCallback glMultiDrawElementsIndirect;
using glMultiTexCoord1dCallback = void (*)(GLenum target,GLdouble s);
extern glMultiTexCoord1dCallback glMultiTexCoord1d;
using glMultiTexCoord1dvCallback = void (*)(GLenum target,const GLdouble * v);
extern glMultiTexCoord1dvCallback glMultiTexCoord1dv;
using glMultiTexCoord1fCallback = void (*)(GLenum target,GLfloat s);
extern glMultiTexCoord1fCallback glMultiTexCoord1f;
using glMultiTexCoord1fvCallback = void (*)(GLenum target,const GLfloat * v);
extern glMultiTexCoord1fvCallback glMultiTexCoord1fv;
using glMultiTexCoord1iCallback = void (*)(GLenum target,GLint s);
extern glMultiTexCoord1iCallback glMultiTexCoord1i;
using glMultiTexCoord1ivCallback = void (*)(GLenum target,const GLint * v);
extern glMultiTexCoord1ivCallback glMultiTexCoord1iv;
using glMultiTexCoord1sCallback = void (*)(GLenum target,GLshort s);
extern glMultiTexCoord1sCallback glMultiTexCoord1s;
using glMultiTexCoord1svCallback = void (*)(GLenum target,const GLshort * v);
extern glMultiTexCoord1svCallback glMultiTexCoord1sv;
using glMultiTexCoord2dCallback = void (*)(GLenum target,GLdouble s,GLdouble t);
extern glMultiTexCoord2dCallback glMultiTexCoord2d;
using glMultiTexCoord2dvCallback = void (*)(GLenum target,const GLdouble * v);
extern glMultiTexCoord2dvCallback glMultiTexCoord2dv;
using glMultiTexCoord2fCallback = void (*)(GLenum target,GLfloat s,GLfloat t);
extern glMultiTexCoord2fCallback glMultiTexCoord2f;
using glMultiTexCoord2fvCallback = void (*)(GLenum target,const GLfloat * v);
extern glMultiTexCoord2fvCallback glMultiTexCoord2fv;
using glMultiTexCoord2iCallback = void (*)(GLenum target,GLint s,GLint t);
extern glMultiTexCoord2iCallback glMultiTexCoord2i;
using glMultiTexCoord2ivCallback = void (*)(GLenum target,const GLint * v);
extern glMultiTexCoord2ivCallback glMultiTexCoord2iv;
using glMultiTexCoord2sCallback = void (*)(GLenum target,GLshort s,GLshort t);
extern glMultiTexCoord2sCallback glMultiTexCoord2s;
using glMultiTexCoord2svCallback = void (*)(GLenum target,const GLshort * v);
extern glMultiTexCoord2svCallback glMultiTexCoord2sv;
using glMultiTexCoord3dCallback = void (*)(GLenum target,GLdouble s,GLdouble t,GLdouble r);
extern glMultiTexCoord3dCallback glMultiTexCoord3d;
using glMultiTexCoord3dvCallback = void (*)(GLenum target,const GLdouble * v);
extern glMultiTexCoord3dvCallback glMultiTexCoord3dv;
using glMultiTexCoord3fCallback = void (*)(GLenum target,GLfloat s,GLfloat t,GLfloat r);
extern glMultiTexCoord3fCallback glMultiTexCoord3f;
using glMultiTexCoord3fvCallback = void (*)(GLenum target,const GLfloat * v);
extern glMultiTexCoord3fvCallback glMultiTexCoord3fv;
using glMultiTexCoord3iCallback = void (*)(GLenum target,GLint s,GLint t,GLint r);
extern glMultiTexCoord3iCallback glMultiTexCoord3i;
using glMultiTexCoord3ivCallback = void (*)(GLenum target,const GLint * v);
extern glMultiTexCoord3ivCallback glMultiTexCoord3iv;
using glMultiTexCoord3sCallback = void (*)(GLenum target,GLshort s,GLshort t,GLshort r);
extern glMultiTexCoord3sCallback glMultiTexCoord3s;
using glMultiTexCoord3svCallback = void (*)(GLenum target,const GLshort * v);
extern glMultiTexCoord3svCallback glMultiTexCoord3sv;
using glMultiTexCoord4dCallback = void (*)(GLenum target,GLdouble s,GLdouble t,GLdouble r,GLdouble q);
extern glMultiTexCoord4dCallback glMultiTexCoord4d;
using glMultiTexCoord4dvCallback = void (*)(GLenum target,const GLdouble * v);
extern glMultiTexCoord4dvCallback glMultiTexCoord4dv;
using glMultiTexCoord4fCallback = void (*)(GLenum target,GLfloat s,GLfloat t,GLfloat r,GLfloat q);
extern glMultiTexCoord4fCallback glMultiTexCoord4f;
using glMultiTexCoord4fvCallback = void (*)(GLenum target,const GLfloat * v);
extern glMultiTexCoord4fvCallback glMultiTexCoord4fv;
using glMultiTexCoord4iCallback = void (*)(GLenum target,GLint s,GLint t,GLint r,GLint q);
extern glMultiTexCoord4iCallback glMultiTexCoord4i;
using glMultiTexCoord4ivCallback = void (*)(GLenum target,const GLint * v);
extern glMultiTexCoord4ivCallback glMultiTexCoord4iv;
using glMultiTexCoord4sCallback = void (*)(GLenum target,GLshort s,GLshort t,GLshort r,GLshort q);
extern glMultiTexCoord4sCallback glMultiTexCoord4s;
using glMultiTexCoord4svCallback = void (*)(GLenum target,const GLshort * v);
extern glMultiTexCoord4svCallback glMultiTexCoord4sv;
using glMultiTexCoordP1uiCallback = void (*)(GLenum texture,GLenum type,GLuint coords);
extern glMultiTexCoordP1uiCallback glMultiTexCoordP1ui;
using glMultiTexCoordP1uivCallback = void (*)(GLenum texture,GLenum type,const GLuint * coords);
extern glMultiTexCoordP1uivCallback glMultiTexCoordP1uiv;
using glMultiTexCoordP2uiCallback = void (*)(GLenum texture,GLenum type,GLuint coords);
extern glMultiTexCoordP2uiCallback glMultiTexCoordP2ui;
using glMultiTexCoordP2uivCallback = void (*)(GLenum texture,GLenum type,const GLuint * coords);
extern glMultiTexCoordP2uivCallback glMultiTexCoordP2uiv;
using glMultiTexCoordP3uiCallback = void (*)(GLenum texture,GLenum type,GLuint coords);
extern glMultiTexCoordP3uiCallback glMultiTexCoordP3ui;
using glMultiTexCoordP3uivCallback = void (*)(GLenum texture,GLenum type,const GLuint * coords);
extern glMultiTexCoordP3uivCallback glMultiTexCoordP3uiv;
using glMultiTexCoordP4uiCallback = void (*)(GLenum texture,GLenum type,GLuint coords);
extern glMultiTexCoordP4uiCallback glMultiTexCoordP4ui;
using glMultiTexCoordP4uivCallback = void (*)(GLenum texture,GLenum type,const GLuint * coords);
extern glMultiTexCoordP4uivCallback glMultiTexCoordP4uiv;
using glNamedBufferDataCallback = void (*)(GLuint buffer,GLsizei size,const void * data,GLenum usage);
extern glNamedBufferDataCallback glNamedBufferData;
using glNamedBufferStorageCallback = void (*)(GLuint buffer,GLsizei size,const void * data,GLbitfield flags);
extern glNamedBufferStorageCallback glNamedBufferStorage;
using glNamedBufferSubDataCallback = void (*)(GLuint buffer,GLintptr offset,GLsizei size,const void * data);
extern glNamedBufferSubDataCallback glNamedBufferSubData;
using glNamedFramebufferDrawBufferCallback = void (*)(GLuint framebuffer,GLenum buf);
extern glNamedFramebufferDrawBufferCallback glNamedFramebufferDrawBuffer;
using glNamedFramebufferDrawBuffersCallback = void (*)(GLuint framebuffer,GLsizei n,const GLenum * bufs);
extern glNamedFramebufferDrawBuffersCallback glNamedFramebufferDrawBuffers;
using glNamedFramebufferParameteriCallback = void (*)(GLuint framebuffer,GLenum pname,GLint param);
extern glNamedFramebufferParameteriCallback glNamedFramebufferParameteri;
using glNamedFramebufferReadBufferCallback = void (*)(GLuint framebuffer,GLenum src);
extern glNamedFramebufferReadBufferCallback glNamedFramebufferReadBuffer;
using glNamedFramebufferRenderbufferCallback = void (*)(GLuint framebuffer,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer);
extern glNamedFramebufferRenderbufferCallback glNamedFramebufferRenderbuffer;
using glNamedFramebufferTextureCallback = void (*)(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level);
extern glNamedFramebufferTextureCallback glNamedFramebufferTexture;
using glNamedFramebufferTextureLayerCallback = void (*)(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level,GLint layer);
extern glNamedFramebufferTextureLayerCallback glNamedFramebufferTextureLayer;
using glNamedRenderbufferStorageCallback = void (*)(GLuint renderbuffer,GLenum internalformat,GLsizei width,GLsizei height);
extern glNamedRenderbufferStorageCallback glNamedRenderbufferStorage;
using glNamedRenderbufferStorageMultisampleCallback = void (*)(GLuint renderbuffer,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height);
extern glNamedRenderbufferStorageMultisampleCallback glNamedRenderbufferStorageMultisample;
using glNewListCallback = void (*)(GLuint list,GLenum mode);
extern glNewListCallback glNewList;
using glNormal3bCallback = void (*)(GLbyte nx,GLbyte ny,GLbyte nz);
extern glNormal3bCallback glNormal3b;
using glNormal3bvCallback = void (*)(const GLbyte * v);
extern glNormal3bvCallback glNormal3bv;
using glNormal3dCallback = void (*)(GLdouble nx,GLdouble ny,GLdouble nz);
extern glNormal3dCallback glNormal3d;
using glNormal3dvCallback = void (*)(const GLdouble * v);
extern glNormal3dvCallback glNormal3dv;
using glNormal3fCallback = void (*)(GLfloat nx,GLfloat ny,GLfloat nz);
extern glNormal3fCallback glNormal3f;
using glNormal3fvCallback = void (*)(const GLfloat * v);
extern glNormal3fvCallback glNormal3fv;
using glNormal3iCallback = void (*)(GLint nx,GLint ny,GLint nz);
extern glNormal3iCallback glNormal3i;
using glNormal3ivCallback = void (*)(const GLint * v);
extern glNormal3ivCallback glNormal3iv;
using glNormal3sCallback = void (*)(GLshort nx,GLshort ny,GLshort nz);
extern glNormal3sCallback glNormal3s;
using glNormal3svCallback = void (*)(const GLshort * v);
extern glNormal3svCallback glNormal3sv;
using glNormalP3uiCallback = void (*)(GLenum type,GLuint coords);
extern glNormalP3uiCallback glNormalP3ui;
using glNormalP3uivCallback = void (*)(GLenum type,const GLuint * coords);
extern glNormalP3uivCallback glNormalP3uiv;
using glNormalPointerCallback = void (*)(GLenum type,GLsizei stride,const void * pointer);
extern glNormalPointerCallback glNormalPointer;
using glObjectLabelCallback = void (*)(GLenum identifier,GLuint name,GLsizei length,const GLchar * label);
extern glObjectLabelCallback glObjectLabel;
using glObjectPtrLabelCallback = void (*)(const void * ptr,GLsizei length,const GLchar * label);
extern glObjectPtrLabelCallback glObjectPtrLabel;
using glOrthoCallback = void (*)(GLdouble left,GLdouble right,GLdouble bottom,GLdouble top,GLdouble zNear,GLdouble zFar);
extern glOrthoCallback glOrtho;
using glPassThroughCallback = void (*)(GLfloat token);
extern glPassThroughCallback glPassThrough;
using glPatchParameterfvCallback = void (*)(GLenum pname,const GLfloat * values);
extern glPatchParameterfvCallback glPatchParameterfv;
using glPatchParameteriCallback = void (*)(GLenum pname,GLint value);
extern glPatchParameteriCallback glPatchParameteri;
using glPauseTransformFeedbackCallback = void (*)();
extern glPauseTransformFeedbackCallback glPauseTransformFeedback;
using glPixelMapfvCallback = void (*)(GLenum map,GLsizei mapsize,const GLfloat * values);
extern glPixelMapfvCallback glPixelMapfv;
using glPixelMapuivCallback = void (*)(GLenum map,GLsizei mapsize,const GLuint * values);
extern glPixelMapuivCallback glPixelMapuiv;
using glPixelMapusvCallback = void (*)(GLenum map,GLsizei mapsize,const GLushort * values);
extern glPixelMapusvCallback glPixelMapusv;
using glPixelStorefCallback = void (*)(GLenum pname,GLfloat param);
extern glPixelStorefCallback glPixelStoref;
using glPixelStoreiCallback = void (*)(GLenum pname,GLint param);
extern glPixelStoreiCallback glPixelStorei;
using glPixelTransferfCallback = void (*)(GLenum pname,GLfloat param);
extern glPixelTransferfCallback glPixelTransferf;
using glPixelTransferiCallback = void (*)(GLenum pname,GLint param);
extern glPixelTransferiCallback glPixelTransferi;
using glPixelZoomCallback = void (*)(GLfloat xfactor,GLfloat yfactor);
extern glPixelZoomCallback glPixelZoom;
using glPointParameterfCallback = void (*)(GLenum pname,GLfloat param);
extern glPointParameterfCallback glPointParameterf;
using glPointParameterfvCallback = void (*)(GLenum pname,const GLfloat * params);
extern glPointParameterfvCallback glPointParameterfv;
using glPointParameteriCallback = void (*)(GLenum pname,GLint param);
extern glPointParameteriCallback glPointParameteri;
using glPointParameterivCallback = void (*)(GLenum pname,const GLint * params);
extern glPointParameterivCallback glPointParameteriv;
using glPointSizeCallback = void (*)(GLfloat size);
extern glPointSizeCallback glPointSize;
using glPolygonModeCallback = void (*)(GLenum face,GLenum mode);
extern glPolygonModeCallback glPolygonMode;
using glPolygonOffsetCallback = void (*)(GLfloat factor,GLfloat units);
extern glPolygonOffsetCallback glPolygonOffset;
using glPolygonStippleCallback = void (*)(const GLubyte * mask);
extern glPolygonStippleCallback glPolygonStipple;
using glPopAttribCallback = void (*)();
extern glPopAttribCallback glPopAttrib;
using glPopClientAttribCallback = void (*)();
extern glPopClientAttribCallback glPopClientAttrib;
using glPopDebugGroupCallback = void (*)();
extern glPopDebugGroupCallback glPopDebugGroup;
using glPopMatrixCallback = void (*)();
extern glPopMatrixCallback glPopMatrix;
using glPopNameCallback = void (*)();
extern glPopNameCallback glPopName;
using glPrimitiveRestartIndexCallback = void (*)(GLuint index);
extern glPrimitiveRestartIndexCallback glPrimitiveRestartIndex;
using glPrioritizeTexturesCallback = void (*)(GLsizei n,const GLuint * textures,const GLfloat * priorities);
extern glPrioritizeTexturesCallback glPrioritizeTextures;
using glProgramBinaryCallback = void (*)(GLuint program,GLenum binaryFormat,const void * binary,GLsizei length);
extern glProgramBinaryCallback glProgramBinary;
using glProgramParameteriCallback = void (*)(GLuint program,GLenum pname,GLint value);
extern glProgramParameteriCallback glProgramParameteri;
using glProgramUniform1dCallback = void (*)(GLuint program,GLint location,GLdouble v0);
extern glProgramUniform1dCallback glProgramUniform1d;
using glProgramUniform1dvCallback = void (*)(GLuint program,GLint location,GLsizei count,const GLdouble * value);
extern glProgramUniform1dvCallback glProgramUniform1dv;
using glProgramUniform1fCallback = void (*)(GLuint program,GLint location,GLfloat v0);
extern glProgramUniform1fCallback glProgramUniform1f;
using glProgramUniform1fvCallback = void (*)(GLuint program,GLint location,GLsizei count,const GLfloat * value);
extern glProgramUniform1fvCallback glProgramUniform1fv;
using glProgramUniform1iCallback = void (*)(GLuint program,GLint location,GLint v0);
extern glProgramUniform1iCallback glProgramUniform1i;
using glProgramUniform1ivCallback = void (*)(GLuint program,GLint location,GLsizei count,const GLint * value);
extern glProgramUniform1ivCallback glProgramUniform1iv;
using glProgramUniform1uiCallback = void (*)(GLuint program,GLint location,GLuint v0);
extern glProgramUniform1uiCallback glProgramUniform1ui;
using glProgramUniform1uivCallback = void (*)(GLuint program,GLint location,GLsizei count,const GLuint * value);
extern glProgramUniform1uivCallback glProgramUniform1uiv;
using glProgramUniform2dCallback = void (*)(GLuint program,GLint location,GLdouble v0,GLdouble v1);
extern glProgramUniform2dCallback glProgramUniform2d;
using glProgramUniform2dvCallback = void (*)(GLuint program,GLint location,GLsizei count,const GLdouble * value);
extern glProgramUniform2dvCallback glProgramUniform2dv;
using glProgramUniform2fCallback = void (*)(GLuint program,GLint location,GLfloat v0,GLfloat v1);
extern glProgramUniform2fCallback glProgramUniform2f;
using glProgramUniform2fvCallback = void (*)(GLuint program,GLint location,GLsizei count,const GLfloat * value);
extern glProgramUniform2fvCallback glProgramUniform2fv;
using glProgramUniform2iCallback = void (*)(GLuint program,GLint location,GLint v0,GLint v1);
extern glProgramUniform2iCallback glProgramUniform2i;
using glProgramUniform2ivCallback = void (*)(GLuint program,GLint location,GLsizei count,const GLint * value);
extern glProgramUniform2ivCallback glProgramUniform2iv;
using glProgramUniform2uiCallback = void (*)(GLuint program,GLint location,GLuint v0,GLuint v1);
extern glProgramUniform2uiCallback glProgramUniform2ui;
using glProgramUniform2uivCallback = void (*)(GLuint program,GLint location,GLsizei count,const GLuint * value);
extern glProgramUniform2uivCallback glProgramUniform2uiv;
using glProgramUniform3dCallback = void (*)(GLuint program,GLint location,GLdouble v0,GLdouble v1,GLdouble v2);
extern glProgramUniform3dCallback glProgramUniform3d;
using glProgramUniform3dvCallback = void (*)(GLuint program,GLint location,GLsizei count,const GLdouble * value);
extern glProgramUniform3dvCallback glProgramUniform3dv;
using glProgramUniform3fCallback = void (*)(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2);
extern glProgramUniform3fCallback glProgramUniform3f;
using glProgramUniform3fvCallback = void (*)(GLuint program,GLint location,GLsizei count,const GLfloat * value);
extern glProgramUniform3fvCallback glProgramUniform3fv;
using glProgramUniform3iCallback = void (*)(GLuint program,GLint location,GLint v0,GLint v1,GLint v2);
extern glProgramUniform3iCallback glProgramUniform3i;
using glProgramUniform3ivCallback = void (*)(GLuint program,GLint location,GLsizei count,const GLint * value);
extern glProgramUniform3ivCallback glProgramUniform3iv;
using glProgramUniform3uiCallback = void (*)(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2);
extern glProgramUniform3uiCallback glProgramUniform3ui;
using glProgramUniform3uivCallback = void (*)(GLuint program,GLint location,GLsizei count,const GLuint * value);
extern glProgramUniform3uivCallback glProgramUniform3uiv;
using glProgramUniform4dCallback = void (*)(GLuint program,GLint location,GLdouble v0,GLdouble v1,GLdouble v2,GLdouble v3);
extern glProgramUniform4dCallback glProgramUniform4d;
using glProgramUniform4dvCallback = void (*)(GLuint program,GLint location,GLsizei count,const GLdouble * value);
extern glProgramUniform4dvCallback glProgramUniform4dv;
using glProgramUniform4fCallback = void (*)(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3);
extern glProgramUniform4fCallback glProgramUniform4f;
using glProgramUniform4fvCallback = void (*)(GLuint program,GLint location,GLsizei count,const GLfloat * value);
extern glProgramUniform4fvCallback glProgramUniform4fv;
using glProgramUniform4iCallback = void (*)(GLuint program,GLint location,GLint v0,GLint v1,GLint v2,GLint v3);
extern glProgramUniform4iCallback glProgramUniform4i;
using glProgramUniform4ivCallback = void (*)(GLuint program,GLint location,GLsizei count,const GLint * value);
extern glProgramUniform4ivCallback glProgramUniform4iv;
using glProgramUniform4uiCallback = void (*)(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3);
extern glProgramUniform4uiCallback glProgramUniform4ui;
using glProgramUniform4uivCallback = void (*)(GLuint program,GLint location,GLsizei count,const GLuint * value);
extern glProgramUniform4uivCallback glProgramUniform4uiv;
using glProgramUniformMatrix2dvCallback = void (*)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value);
extern glProgramUniformMatrix2dvCallback glProgramUniformMatrix2dv;
using glProgramUniformMatrix2fvCallback = void (*)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value);
extern glProgramUniformMatrix2fvCallback glProgramUniformMatrix2fv;
using glProgramUniformMatrix2x3dvCallback = void (*)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value);
extern glProgramUniformMatrix2x3dvCallback glProgramUniformMatrix2x3dv;
using glProgramUniformMatrix2x3fvCallback = void (*)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value);
extern glProgramUniformMatrix2x3fvCallback glProgramUniformMatrix2x3fv;
using glProgramUniformMatrix2x4dvCallback = void (*)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value);
extern glProgramUniformMatrix2x4dvCallback glProgramUniformMatrix2x4dv;
using glProgramUniformMatrix2x4fvCallback = void (*)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value);
extern glProgramUniformMatrix2x4fvCallback glProgramUniformMatrix2x4fv;
using glProgramUniformMatrix3dvCallback = void (*)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value);
extern glProgramUniformMatrix3dvCallback glProgramUniformMatrix3dv;
using glProgramUniformMatrix3fvCallback = void (*)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value);
extern glProgramUniformMatrix3fvCallback glProgramUniformMatrix3fv;
using glProgramUniformMatrix3x2dvCallback = void (*)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value);
extern glProgramUniformMatrix3x2dvCallback glProgramUniformMatrix3x2dv;
using glProgramUniformMatrix3x2fvCallback = void (*)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value);
extern glProgramUniformMatrix3x2fvCallback glProgramUniformMatrix3x2fv;
using glProgramUniformMatrix3x4dvCallback = void (*)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value);
extern glProgramUniformMatrix3x4dvCallback glProgramUniformMatrix3x4dv;
using glProgramUniformMatrix3x4fvCallback = void (*)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value);
extern glProgramUniformMatrix3x4fvCallback glProgramUniformMatrix3x4fv;
using glProgramUniformMatrix4dvCallback = void (*)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value);
extern glProgramUniformMatrix4dvCallback glProgramUniformMatrix4dv;
using glProgramUniformMatrix4fvCallback = void (*)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value);
extern glProgramUniformMatrix4fvCallback glProgramUniformMatrix4fv;
using glProgramUniformMatrix4x2dvCallback = void (*)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value);
extern glProgramUniformMatrix4x2dvCallback glProgramUniformMatrix4x2dv;
using glProgramUniformMatrix4x2fvCallback = void (*)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value);
extern glProgramUniformMatrix4x2fvCallback glProgramUniformMatrix4x2fv;
using glProgramUniformMatrix4x3dvCallback = void (*)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value);
extern glProgramUniformMatrix4x3dvCallback glProgramUniformMatrix4x3dv;
using glProgramUniformMatrix4x3fvCallback = void (*)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value);
extern glProgramUniformMatrix4x3fvCallback glProgramUniformMatrix4x3fv;
using glProvokingVertexCallback = void (*)(GLenum mode);
extern glProvokingVertexCallback glProvokingVertex;
using glPushAttribCallback = void (*)(GLbitfield mask);
extern glPushAttribCallback glPushAttrib;
using glPushClientAttribCallback = void (*)(GLbitfield mask);
extern glPushClientAttribCallback glPushClientAttrib;
using glPushDebugGroupCallback = void (*)(GLenum source,GLuint id,GLsizei length,const GLchar * message);
extern glPushDebugGroupCallback glPushDebugGroup;
using glPushMatrixCallback = void (*)();
extern glPushMatrixCallback glPushMatrix;
using glPushNameCallback = void (*)(GLuint name);
extern glPushNameCallback glPushName;
using glQueryCounterCallback = void (*)(GLuint id,GLenum target);
extern glQueryCounterCallback glQueryCounter;
using glRasterPos2dCallback = void (*)(GLdouble x,GLdouble y);
extern glRasterPos2dCallback glRasterPos2d;
using glRasterPos2dvCallback = void (*)(const GLdouble * v);
extern glRasterPos2dvCallback glRasterPos2dv;
using glRasterPos2fCallback = void (*)(GLfloat x,GLfloat y);
extern glRasterPos2fCallback glRasterPos2f;
using glRasterPos2fvCallback = void (*)(const GLfloat * v);
extern glRasterPos2fvCallback glRasterPos2fv;
using glRasterPos2iCallback = void (*)(GLint x,GLint y);
extern glRasterPos2iCallback glRasterPos2i;
using glRasterPos2ivCallback = void (*)(const GLint * v);
extern glRasterPos2ivCallback glRasterPos2iv;
using glRasterPos2sCallback = void (*)(GLshort x,GLshort y);
extern glRasterPos2sCallback glRasterPos2s;
using glRasterPos2svCallback = void (*)(const GLshort * v);
extern glRasterPos2svCallback glRasterPos2sv;
using glRasterPos3dCallback = void (*)(GLdouble x,GLdouble y,GLdouble z);
extern glRasterPos3dCallback glRasterPos3d;
using glRasterPos3dvCallback = void (*)(const GLdouble * v);
extern glRasterPos3dvCallback glRasterPos3dv;
using glRasterPos3fCallback = void (*)(GLfloat x,GLfloat y,GLfloat z);
extern glRasterPos3fCallback glRasterPos3f;
using glRasterPos3fvCallback = void (*)(const GLfloat * v);
extern glRasterPos3fvCallback glRasterPos3fv;
using glRasterPos3iCallback = void (*)(GLint x,GLint y,GLint z);
extern glRasterPos3iCallback glRasterPos3i;
using glRasterPos3ivCallback = void (*)(const GLint * v);
extern glRasterPos3ivCallback glRasterPos3iv;
using glRasterPos3sCallback = void (*)(GLshort x,GLshort y,GLshort z);
extern glRasterPos3sCallback glRasterPos3s;
using glRasterPos3svCallback = void (*)(const GLshort * v);
extern glRasterPos3svCallback glRasterPos3sv;
using glRasterPos4dCallback = void (*)(GLdouble x,GLdouble y,GLdouble z,GLdouble w);
extern glRasterPos4dCallback glRasterPos4d;
using glRasterPos4dvCallback = void (*)(const GLdouble * v);
extern glRasterPos4dvCallback glRasterPos4dv;
using glRasterPos4fCallback = void (*)(GLfloat x,GLfloat y,GLfloat z,GLfloat w);
extern glRasterPos4fCallback glRasterPos4f;
using glRasterPos4fvCallback = void (*)(const GLfloat * v);
extern glRasterPos4fvCallback glRasterPos4fv;
using glRasterPos4iCallback = void (*)(GLint x,GLint y,GLint z,GLint w);
extern glRasterPos4iCallback glRasterPos4i;
using glRasterPos4ivCallback = void (*)(const GLint * v);
extern glRasterPos4ivCallback glRasterPos4iv;
using glRasterPos4sCallback = void (*)(GLshort x,GLshort y,GLshort z,GLshort w);
extern glRasterPos4sCallback glRasterPos4s;
using glRasterPos4svCallback = void (*)(const GLshort * v);
extern glRasterPos4svCallback glRasterPos4sv;
using glReadBufferCallback = void (*)(GLenum src);
extern glReadBufferCallback glReadBuffer;
using glReadPixelsCallback = void (*)(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,void * pixels);
extern glReadPixelsCallback glReadPixels;
using glReadnPixelsCallback = void (*)(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,GLsizei bufSize,void * data);
extern glReadnPixelsCallback glReadnPixels;
using glRectdCallback = void (*)(GLdouble x1,GLdouble y1,GLdouble x2,GLdouble y2);
extern glRectdCallback glRectd;
using glRectdvCallback = void (*)(const GLdouble * v1,const GLdouble * v2);
extern glRectdvCallback glRectdv;
using glRectfCallback = void (*)(GLfloat x1,GLfloat y1,GLfloat x2,GLfloat y2);
extern glRectfCallback glRectf;
using glRectfvCallback = void (*)(const GLfloat * v1,const GLfloat * v2);
extern glRectfvCallback glRectfv;
using glRectiCallback = void (*)(GLint x1,GLint y1,GLint x2,GLint y2);
extern glRectiCallback glRecti;
using glRectivCallback = void (*)(const GLint * v1,const GLint * v2);
extern glRectivCallback glRectiv;
using glRectsCallback = void (*)(GLshort x1,GLshort y1,GLshort x2,GLshort y2);
extern glRectsCallback glRects;
using glRectsvCallback = void (*)(const GLshort * v1,const GLshort * v2);
extern glRectsvCallback glRectsv;
using glReleaseShaderCompilerCallback = void (*)();
extern glReleaseShaderCompilerCallback glReleaseShaderCompiler;
using glRenderModeCallback = GLint (*)(GLenum mode);
extern glRenderModeCallback glRenderMode;
using glRenderbufferStorageCallback = void (*)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height);
extern glRenderbufferStorageCallback glRenderbufferStorage;
using glRenderbufferStorageMultisampleCallback = void (*)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height);
extern glRenderbufferStorageMultisampleCallback glRenderbufferStorageMultisample;
using glResumeTransformFeedbackCallback = void (*)();
extern glResumeTransformFeedbackCallback glResumeTransformFeedback;
using glRotatedCallback = void (*)(GLdouble angle,GLdouble x,GLdouble y,GLdouble z);
extern glRotatedCallback glRotated;
using glRotatefCallback = void (*)(GLfloat angle,GLfloat x,GLfloat y,GLfloat z);
extern glRotatefCallback glRotatef;
using glSampleCoverageCallback = void (*)(GLfloat value,GLboolean invert);
extern glSampleCoverageCallback glSampleCoverage;
using glSampleMaskiCallback = void (*)(GLuint maskNumber,GLbitfield mask);
extern glSampleMaskiCallback glSampleMaski;
using glSamplerParameterIivCallback = void (*)(GLuint sampler,GLenum pname,const GLint * param);
extern glSamplerParameterIivCallback glSamplerParameterIiv;
using glSamplerParameterIuivCallback = void (*)(GLuint sampler,GLenum pname,const GLuint * param);
extern glSamplerParameterIuivCallback glSamplerParameterIuiv;
using glSamplerParameterfCallback = void (*)(GLuint sampler,GLenum pname,GLfloat param);
extern glSamplerParameterfCallback glSamplerParameterf;
using glSamplerParameterfvCallback = void (*)(GLuint sampler,GLenum pname,const GLfloat * param);
extern glSamplerParameterfvCallback glSamplerParameterfv;
using glSamplerParameteriCallback = void (*)(GLuint sampler,GLenum pname,GLint param);
extern glSamplerParameteriCallback glSamplerParameteri;
using glSamplerParameterivCallback = void (*)(GLuint sampler,GLenum pname,const GLint * param);
extern glSamplerParameterivCallback glSamplerParameteriv;
using glScaledCallback = void (*)(GLdouble x,GLdouble y,GLdouble z);
extern glScaledCallback glScaled;
using glScalefCallback = void (*)(GLfloat x,GLfloat y,GLfloat z);
extern glScalefCallback glScalef;
using glScissorCallback = void (*)(GLint x,GLint y,GLsizei width,GLsizei height);
extern glScissorCallback glScissor;
using glScissorArrayvCallback = void (*)(GLuint first,GLsizei count,const GLint * v);
extern glScissorArrayvCallback glScissorArrayv;
using glScissorIndexedCallback = void (*)(GLuint index,GLint left,GLint bottom,GLsizei width,GLsizei height);
extern glScissorIndexedCallback glScissorIndexed;
using glScissorIndexedvCallback = void (*)(GLuint index,const GLint * v);
extern glScissorIndexedvCallback glScissorIndexedv;
using glSecondaryColor3bCallback = void (*)(GLbyte red,GLbyte green,GLbyte blue);
extern glSecondaryColor3bCallback glSecondaryColor3b;
using glSecondaryColor3bvCallback = void (*)(const GLbyte * v);
extern glSecondaryColor3bvCallback glSecondaryColor3bv;
using glSecondaryColor3dCallback = void (*)(GLdouble red,GLdouble green,GLdouble blue);
extern glSecondaryColor3dCallback glSecondaryColor3d;
using glSecondaryColor3dvCallback = void (*)(const GLdouble * v);
extern glSecondaryColor3dvCallback glSecondaryColor3dv;
using glSecondaryColor3fCallback = void (*)(GLfloat red,GLfloat green,GLfloat blue);
extern glSecondaryColor3fCallback glSecondaryColor3f;
using glSecondaryColor3fvCallback = void (*)(const GLfloat * v);
extern glSecondaryColor3fvCallback glSecondaryColor3fv;
using glSecondaryColor3iCallback = void (*)(GLint red,GLint green,GLint blue);
extern glSecondaryColor3iCallback glSecondaryColor3i;
using glSecondaryColor3ivCallback = void (*)(const GLint * v);
extern glSecondaryColor3ivCallback glSecondaryColor3iv;
using glSecondaryColor3sCallback = void (*)(GLshort red,GLshort green,GLshort blue);
extern glSecondaryColor3sCallback glSecondaryColor3s;
using glSecondaryColor3svCallback = void (*)(const GLshort * v);
extern glSecondaryColor3svCallback glSecondaryColor3sv;
using glSecondaryColor3ubCallback = void (*)(GLubyte red,GLubyte green,GLubyte blue);
extern glSecondaryColor3ubCallback glSecondaryColor3ub;
using glSecondaryColor3ubvCallback = void (*)(const GLubyte * v);
extern glSecondaryColor3ubvCallback glSecondaryColor3ubv;
using glSecondaryColor3uiCallback = void (*)(GLuint red,GLuint green,GLuint blue);
extern glSecondaryColor3uiCallback glSecondaryColor3ui;
using glSecondaryColor3uivCallback = void (*)(const GLuint * v);
extern glSecondaryColor3uivCallback glSecondaryColor3uiv;
using glSecondaryColor3usCallback = void (*)(GLushort red,GLushort green,GLushort blue);
extern glSecondaryColor3usCallback glSecondaryColor3us;
using glSecondaryColor3usvCallback = void (*)(const GLushort * v);
extern glSecondaryColor3usvCallback glSecondaryColor3usv;
using glSecondaryColorP3uiCallback = void (*)(GLenum type,GLuint color);
extern glSecondaryColorP3uiCallback glSecondaryColorP3ui;
using glSecondaryColorP3uivCallback = void (*)(GLenum type,const GLuint * color);
extern glSecondaryColorP3uivCallback glSecondaryColorP3uiv;
using glSecondaryColorPointerCallback = void (*)(GLint size,GLenum type,GLsizei stride,const void * pointer);
extern glSecondaryColorPointerCallback glSecondaryColorPointer;
using glSelectBufferCallback = void (*)(GLsizei size,GLuint * buffer);
extern glSelectBufferCallback glSelectBuffer;
using glShadeModelCallback = void (*)(GLenum mode);
extern glShadeModelCallback glShadeModel;
using glShaderBinaryCallback = void (*)(GLsizei count,const GLuint * shaders,GLenum binaryformat,const void * binary,GLsizei length);
extern glShaderBinaryCallback glShaderBinary;
using glShaderSourceCallback = void (*)(GLuint shader,GLsizei count,const GLchar *const* string,const GLint * length);
extern glShaderSourceCallback glShaderSource;
using glShaderStorageBlockBindingCallback = void (*)(GLuint program,GLuint storageBlockIndex,GLuint storageBlockBinding);
extern glShaderStorageBlockBindingCallback glShaderStorageBlockBinding;
using glStencilFuncCallback = void (*)(GLenum func,GLint ref,GLuint mask);
extern glStencilFuncCallback glStencilFunc;
using glStencilFuncSeparateCallback = void (*)(GLenum face,GLenum func,GLint ref,GLuint mask);
extern glStencilFuncSeparateCallback glStencilFuncSeparate;
using glStencilMaskCallback = void (*)(GLuint mask);
extern glStencilMaskCallback glStencilMask;
using glStencilMaskSeparateCallback = void (*)(GLenum face,GLuint mask);
extern glStencilMaskSeparateCallback glStencilMaskSeparate;
using glStencilOpCallback = void (*)(GLenum fail,GLenum zfail,GLenum zpass);
extern glStencilOpCallback glStencilOp;
using glStencilOpSeparateCallback = void (*)(GLenum face,GLenum sfail,GLenum dpfail,GLenum dppass);
extern glStencilOpSeparateCallback glStencilOpSeparate;
using glTexBufferCallback = void (*)(GLenum target,GLenum internalformat,GLuint buffer);
extern glTexBufferCallback glTexBuffer;
using glTexBufferRangeCallback = void (*)(GLenum target,GLenum internalformat,GLuint buffer,GLintptr offset,GLsizeiptr size);
extern glTexBufferRangeCallback glTexBufferRange;
using glTexCoord1dCallback = void (*)(GLdouble s);
extern glTexCoord1dCallback glTexCoord1d;
using glTexCoord1dvCallback = void (*)(const GLdouble * v);
extern glTexCoord1dvCallback glTexCoord1dv;
using glTexCoord1fCallback = void (*)(GLfloat s);
extern glTexCoord1fCallback glTexCoord1f;
using glTexCoord1fvCallback = void (*)(const GLfloat * v);
extern glTexCoord1fvCallback glTexCoord1fv;
using glTexCoord1iCallback = void (*)(GLint s);
extern glTexCoord1iCallback glTexCoord1i;
using glTexCoord1ivCallback = void (*)(const GLint * v);
extern glTexCoord1ivCallback glTexCoord1iv;
using glTexCoord1sCallback = void (*)(GLshort s);
extern glTexCoord1sCallback glTexCoord1s;
using glTexCoord1svCallback = void (*)(const GLshort * v);
extern glTexCoord1svCallback glTexCoord1sv;
using glTexCoord2dCallback = void (*)(GLdouble s,GLdouble t);
extern glTexCoord2dCallback glTexCoord2d;
using glTexCoord2dvCallback = void (*)(const GLdouble * v);
extern glTexCoord2dvCallback glTexCoord2dv;
using glTexCoord2fCallback = void (*)(GLfloat s,GLfloat t);
extern glTexCoord2fCallback glTexCoord2f;
using glTexCoord2fvCallback = void (*)(const GLfloat * v);
extern glTexCoord2fvCallback glTexCoord2fv;
using glTexCoord2iCallback = void (*)(GLint s,GLint t);
extern glTexCoord2iCallback glTexCoord2i;
using glTexCoord2ivCallback = void (*)(const GLint * v);
extern glTexCoord2ivCallback glTexCoord2iv;
using glTexCoord2sCallback = void (*)(GLshort s,GLshort t);
extern glTexCoord2sCallback glTexCoord2s;
using glTexCoord2svCallback = void (*)(const GLshort * v);
extern glTexCoord2svCallback glTexCoord2sv;
using glTexCoord3dCallback = void (*)(GLdouble s,GLdouble t,GLdouble r);
extern glTexCoord3dCallback glTexCoord3d;
using glTexCoord3dvCallback = void (*)(const GLdouble * v);
extern glTexCoord3dvCallback glTexCoord3dv;
using glTexCoord3fCallback = void (*)(GLfloat s,GLfloat t,GLfloat r);
extern glTexCoord3fCallback glTexCoord3f;
using glTexCoord3fvCallback = void (*)(const GLfloat * v);
extern glTexCoord3fvCallback glTexCoord3fv;
using glTexCoord3iCallback = void (*)(GLint s,GLint t,GLint r);
extern glTexCoord3iCallback glTexCoord3i;
using glTexCoord3ivCallback = void (*)(const GLint * v);
extern glTexCoord3ivCallback glTexCoord3iv;
using glTexCoord3sCallback = void (*)(GLshort s,GLshort t,GLshort r);
extern glTexCoord3sCallback glTexCoord3s;
using glTexCoord3svCallback = void (*)(const GLshort * v);
extern glTexCoord3svCallback glTexCoord3sv;
using glTexCoord4dCallback = void (*)(GLdouble s,GLdouble t,GLdouble r,GLdouble q);
extern glTexCoord4dCallback glTexCoord4d;
using glTexCoord4dvCallback = void (*)(const GLdouble * v);
extern glTexCoord4dvCallback glTexCoord4dv;
using glTexCoord4fCallback = void (*)(GLfloat s,GLfloat t,GLfloat r,GLfloat q);
extern glTexCoord4fCallback glTexCoord4f;
using glTexCoord4fvCallback = void (*)(const GLfloat * v);
extern glTexCoord4fvCallback glTexCoord4fv;
using glTexCoord4iCallback = void (*)(GLint s,GLint t,GLint r,GLint q);
extern glTexCoord4iCallback glTexCoord4i;
using glTexCoord4ivCallback = void (*)(const GLint * v);
extern glTexCoord4ivCallback glTexCoord4iv;
using glTexCoord4sCallback = void (*)(GLshort s,GLshort t,GLshort r,GLshort q);
extern glTexCoord4sCallback glTexCoord4s;
using glTexCoord4svCallback = void (*)(const GLshort * v);
extern glTexCoord4svCallback glTexCoord4sv;
using glTexCoordP1uiCallback = void (*)(GLenum type,GLuint coords);
extern glTexCoordP1uiCallback glTexCoordP1ui;
using glTexCoordP1uivCallback = void (*)(GLenum type,const GLuint * coords);
extern glTexCoordP1uivCallback glTexCoordP1uiv;
using glTexCoordP2uiCallback = void (*)(GLenum type,GLuint coords);
extern glTexCoordP2uiCallback glTexCoordP2ui;
using glTexCoordP2uivCallback = void (*)(GLenum type,const GLuint * coords);
extern glTexCoordP2uivCallback glTexCoordP2uiv;
using glTexCoordP3uiCallback = void (*)(GLenum type,GLuint coords);
extern glTexCoordP3uiCallback glTexCoordP3ui;
using glTexCoordP3uivCallback = void (*)(GLenum type,const GLuint * coords);
extern glTexCoordP3uivCallback glTexCoordP3uiv;
using glTexCoordP4uiCallback = void (*)(GLenum type,GLuint coords);
extern glTexCoordP4uiCallback glTexCoordP4ui;
using glTexCoordP4uivCallback = void (*)(GLenum type,const GLuint * coords);
extern glTexCoordP4uivCallback glTexCoordP4uiv;
using glTexCoordPointerCallback = void (*)(GLint size,GLenum type,GLsizei stride,const void * pointer);
extern glTexCoordPointerCallback glTexCoordPointer;
using glTexEnvfCallback = void (*)(GLenum target,GLenum pname,GLfloat param);
extern glTexEnvfCallback glTexEnvf;
using glTexEnvfvCallback = void (*)(GLenum target,GLenum pname,const GLfloat * params);
extern glTexEnvfvCallback glTexEnvfv;
using glTexEnviCallback = void (*)(GLenum target,GLenum pname,GLint param);
extern glTexEnviCallback glTexEnvi;
using glTexEnvivCallback = void (*)(GLenum target,GLenum pname,const GLint * params);
extern glTexEnvivCallback glTexEnviv;
using glTexGendCallback = void (*)(GLenum coord,GLenum pname,GLdouble param);
extern glTexGendCallback glTexGend;
using glTexGendvCallback = void (*)(GLenum coord,GLenum pname,const GLdouble * params);
extern glTexGendvCallback glTexGendv;
using glTexGenfCallback = void (*)(GLenum coord,GLenum pname,GLfloat param);
extern glTexGenfCallback glTexGenf;
using glTexGenfvCallback = void (*)(GLenum coord,GLenum pname,const GLfloat * params);
extern glTexGenfvCallback glTexGenfv;
using glTexGeniCallback = void (*)(GLenum coord,GLenum pname,GLint param);
extern glTexGeniCallback glTexGeni;
using glTexGenivCallback = void (*)(GLenum coord,GLenum pname,const GLint * params);
extern glTexGenivCallback glTexGeniv;
using glTexImage1DCallback = void (*)(GLenum target,GLint level,GLint internalformat,GLsizei width,GLint border,GLenum format,GLenum type,const void * pixels);
extern glTexImage1DCallback glTexImage1D;
using glTexImage2DCallback = void (*)(GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLint border,GLenum format,GLenum type,const void * pixels);
extern glTexImage2DCallback glTexImage2D;
using glTexImage2DMultisampleCallback = void (*)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations);
extern glTexImage2DMultisampleCallback glTexImage2DMultisample;
using glTexImage3DCallback = void (*)(GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void * pixels);
extern glTexImage3DCallback glTexImage3D;
using glTexImage3DMultisampleCallback = void (*)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations);
extern glTexImage3DMultisampleCallback glTexImage3DMultisample;
using glTexParameterIivCallback = void (*)(GLenum target,GLenum pname,const GLint * params);
extern glTexParameterIivCallback glTexParameterIiv;
using glTexParameterIuivCallback = void (*)(GLenum target,GLenum pname,const GLuint * params);
extern glTexParameterIuivCallback glTexParameterIuiv;
using glTexParameterfCallback = void (*)(GLenum target,GLenum pname,GLfloat param);
extern glTexParameterfCallback glTexParameterf;
using glTexParameterfvCallback = void (*)(GLenum target,GLenum pname,const GLfloat * params);
extern glTexParameterfvCallback glTexParameterfv;
using glTexParameteriCallback = void (*)(GLenum target,GLenum pname,GLint param);
extern glTexParameteriCallback glTexParameteri;
using glTexParameterivCallback = void (*)(GLenum target,GLenum pname,const GLint * params);
extern glTexParameterivCallback glTexParameteriv;
using glTexStorage1DCallback = void (*)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width);
extern glTexStorage1DCallback glTexStorage1D;
using glTexStorage2DCallback = void (*)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height);
extern glTexStorage2DCallback glTexStorage2D;
using glTexStorage2DMultisampleCallback = void (*)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations);
extern glTexStorage2DMultisampleCallback glTexStorage2DMultisample;
using glTexStorage3DCallback = void (*)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth);
extern glTexStorage3DCallback glTexStorage3D;
using glTexStorage3DMultisampleCallback = void (*)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations);
extern glTexStorage3DMultisampleCallback glTexStorage3DMultisample;
using glTexSubImage1DCallback = void (*)(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void * pixels);
extern glTexSubImage1DCallback glTexSubImage1D;
using glTexSubImage2DCallback = void (*)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels);
extern glTexSubImage2DCallback glTexSubImage2D;
using glTexSubImage3DCallback = void (*)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels);
extern glTexSubImage3DCallback glTexSubImage3D;
using glTextureBarrierCallback = void (*)();
extern glTextureBarrierCallback glTextureBarrier;
using glTextureBufferCallback = void (*)(GLuint texture,GLenum internalformat,GLuint buffer);
extern glTextureBufferCallback glTextureBuffer;
using glTextureBufferRangeCallback = void (*)(GLuint texture,GLenum internalformat,GLuint buffer,GLintptr offset,GLsizei size);
extern glTextureBufferRangeCallback glTextureBufferRange;
using glTextureParameterIivCallback = void (*)(GLuint texture,GLenum pname,const GLint * params);
extern glTextureParameterIivCallback glTextureParameterIiv;
using glTextureParameterIuivCallback = void (*)(GLuint texture,GLenum pname,const GLuint * params);
extern glTextureParameterIuivCallback glTextureParameterIuiv;
using glTextureParameterfCallback = void (*)(GLuint texture,GLenum pname,GLfloat param);
extern glTextureParameterfCallback glTextureParameterf;
using glTextureParameterfvCallback = void (*)(GLuint texture,GLenum pname,const GLfloat * param);
extern glTextureParameterfvCallback glTextureParameterfv;
using glTextureParameteriCallback = void (*)(GLuint texture,GLenum pname,GLint param);
extern glTextureParameteriCallback glTextureParameteri;
using glTextureParameterivCallback = void (*)(GLuint texture,GLenum pname,const GLint * param);
extern glTextureParameterivCallback glTextureParameteriv;
using glTextureStorage1DCallback = void (*)(GLuint texture,GLsizei levels,GLenum internalformat,GLsizei width);
extern glTextureStorage1DCallback glTextureStorage1D;
using glTextureStorage2DCallback = void (*)(GLuint texture,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height);
extern glTextureStorage2DCallback glTextureStorage2D;
using glTextureStorage2DMultisampleCallback = void (*)(GLuint texture,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations);
extern glTextureStorage2DMultisampleCallback glTextureStorage2DMultisample;
using glTextureStorage3DCallback = void (*)(GLuint texture,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth);
extern glTextureStorage3DCallback glTextureStorage3D;
using glTextureStorage3DMultisampleCallback = void (*)(GLuint texture,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations);
extern glTextureStorage3DMultisampleCallback glTextureStorage3DMultisample;
using glTextureSubImage1DCallback = void (*)(GLuint texture,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void * pixels);
extern glTextureSubImage1DCallback glTextureSubImage1D;
using glTextureSubImage2DCallback = void (*)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels);
extern glTextureSubImage2DCallback glTextureSubImage2D;
using glTextureSubImage3DCallback = void (*)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels);
extern glTextureSubImage3DCallback glTextureSubImage3D;
using glTextureViewCallback = void (*)(GLuint texture,GLenum target,GLuint origtexture,GLenum internalformat,GLuint minlevel,GLuint numlevels,GLuint minlayer,GLuint numlayers);
extern glTextureViewCallback glTextureView;
using glTransformFeedbackBufferBaseCallback = void (*)(GLuint xfb,GLuint index,GLuint buffer);
extern glTransformFeedbackBufferBaseCallback glTransformFeedbackBufferBase;
using glTransformFeedbackBufferRangeCallback = void (*)(GLuint xfb,GLuint index,GLuint buffer,GLintptr offset,GLsizei size);
extern glTransformFeedbackBufferRangeCallback glTransformFeedbackBufferRange;
using glTransformFeedbackVaryingsCallback = void (*)(GLuint program,GLsizei count,const GLchar *const* varyings,GLenum bufferMode);
extern glTransformFeedbackVaryingsCallback glTransformFeedbackVaryings;
using glTranslatedCallback = void (*)(GLdouble x,GLdouble y,GLdouble z);
extern glTranslatedCallback glTranslated;
using glTranslatefCallback = void (*)(GLfloat x,GLfloat y,GLfloat z);
extern glTranslatefCallback glTranslatef;
using glUniform1dCallback = void (*)(GLint location,GLdouble x);
extern glUniform1dCallback glUniform1d;
using glUniform1dvCallback = void (*)(GLint location,GLsizei count,const GLdouble * value);
extern glUniform1dvCallback glUniform1dv;
using glUniform1fCallback = void (*)(GLint location,GLfloat v0);
extern glUniform1fCallback glUniform1f;
using glUniform1fvCallback = void (*)(GLint location,GLsizei count,const GLfloat * value);
extern glUniform1fvCallback glUniform1fv;
using glUniform1iCallback = void (*)(GLint location,GLint v0);
extern glUniform1iCallback glUniform1i;
using glUniform1ivCallback = void (*)(GLint location,GLsizei count,const GLint * value);
extern glUniform1ivCallback glUniform1iv;
using glUniform1uiCallback = void (*)(GLint location,GLuint v0);
extern glUniform1uiCallback glUniform1ui;
using glUniform1uivCallback = void (*)(GLint location,GLsizei count,const GLuint * value);
extern glUniform1uivCallback glUniform1uiv;
using glUniform2dCallback = void (*)(GLint location,GLdouble x,GLdouble y);
extern glUniform2dCallback glUniform2d;
using glUniform2dvCallback = void (*)(GLint location,GLsizei count,const GLdouble * value);
extern glUniform2dvCallback glUniform2dv;
using glUniform2fCallback = void (*)(GLint location,GLfloat v0,GLfloat v1);
extern glUniform2fCallback glUniform2f;
using glUniform2fvCallback = void (*)(GLint location,GLsizei count,const GLfloat * value);
extern glUniform2fvCallback glUniform2fv;
using glUniform2iCallback = void (*)(GLint location,GLint v0,GLint v1);
extern glUniform2iCallback glUniform2i;
using glUniform2ivCallback = void (*)(GLint location,GLsizei count,const GLint * value);
extern glUniform2ivCallback glUniform2iv;
using glUniform2uiCallback = void (*)(GLint location,GLuint v0,GLuint v1);
extern glUniform2uiCallback glUniform2ui;
using glUniform2uivCallback = void (*)(GLint location,GLsizei count,const GLuint * value);
extern glUniform2uivCallback glUniform2uiv;
using glUniform3dCallback = void (*)(GLint location,GLdouble x,GLdouble y,GLdouble z);
extern glUniform3dCallback glUniform3d;
using glUniform3dvCallback = void (*)(GLint location,GLsizei count,const GLdouble * value);
extern glUniform3dvCallback glUniform3dv;
using glUniform3fCallback = void (*)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2);
extern glUniform3fCallback glUniform3f;
using glUniform3fvCallback = void (*)(GLint location,GLsizei count,const GLfloat * value);
extern glUniform3fvCallback glUniform3fv;
using glUniform3iCallback = void (*)(GLint location,GLint v0,GLint v1,GLint v2);
extern glUniform3iCallback glUniform3i;
using glUniform3ivCallback = void (*)(GLint location,GLsizei count,const GLint * value);
extern glUniform3ivCallback glUniform3iv;
using glUniform3uiCallback = void (*)(GLint location,GLuint v0,GLuint v1,GLuint v2);
extern glUniform3uiCallback glUniform3ui;
using glUniform3uivCallback = void (*)(GLint location,GLsizei count,const GLuint * value);
extern glUniform3uivCallback glUniform3uiv;
using glUniform4dCallback = void (*)(GLint location,GLdouble x,GLdouble y,GLdouble z,GLdouble w);
extern glUniform4dCallback glUniform4d;
using glUniform4dvCallback = void (*)(GLint location,GLsizei count,const GLdouble * value);
extern glUniform4dvCallback glUniform4dv;
using glUniform4fCallback = void (*)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3);
extern glUniform4fCallback glUniform4f;
using glUniform4fvCallback = void (*)(GLint location,GLsizei count,const GLfloat * value);
extern glUniform4fvCallback glUniform4fv;
using glUniform4iCallback = void (*)(GLint location,GLint v0,GLint v1,GLint v2,GLint v3);
extern glUniform4iCallback glUniform4i;
using glUniform4ivCallback = void (*)(GLint location,GLsizei count,const GLint * value);
extern glUniform4ivCallback glUniform4iv;
using glUniform4uiCallback = void (*)(GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3);
extern glUniform4uiCallback glUniform4ui;
using glUniform4uivCallback = void (*)(GLint location,GLsizei count,const GLuint * value);
extern glUniform4uivCallback glUniform4uiv;
using glUniformBlockBindingCallback = void (*)(GLuint program,GLuint uniformBlockIndex,GLuint uniformBlockBinding);
extern glUniformBlockBindingCallback glUniformBlockBinding;
using glUniformMatrix2dvCallback = void (*)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value);
extern glUniformMatrix2dvCallback glUniformMatrix2dv;
using glUniformMatrix2fvCallback = void (*)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value);
extern glUniformMatrix2fvCallback glUniformMatrix2fv;
using glUniformMatrix2x3dvCallback = void (*)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value);
extern glUniformMatrix2x3dvCallback glUniformMatrix2x3dv;
using glUniformMatrix2x3fvCallback = void (*)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value);
extern glUniformMatrix2x3fvCallback glUniformMatrix2x3fv;
using glUniformMatrix2x4dvCallback = void (*)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value);
extern glUniformMatrix2x4dvCallback glUniformMatrix2x4dv;
using glUniformMatrix2x4fvCallback = void (*)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value);
extern glUniformMatrix2x4fvCallback glUniformMatrix2x4fv;
using glUniformMatrix3dvCallback = void (*)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value);
extern glUniformMatrix3dvCallback glUniformMatrix3dv;
using glUniformMatrix3fvCallback = void (*)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value);
extern glUniformMatrix3fvCallback glUniformMatrix3fv;
using glUniformMatrix3x2dvCallback = void (*)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value);
extern glUniformMatrix3x2dvCallback glUniformMatrix3x2dv;
using glUniformMatrix3x2fvCallback = void (*)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value);
extern glUniformMatrix3x2fvCallback glUniformMatrix3x2fv;
using glUniformMatrix3x4dvCallback = void (*)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value);
extern glUniformMatrix3x4dvCallback glUniformMatrix3x4dv;
using glUniformMatrix3x4fvCallback = void (*)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value);
extern glUniformMatrix3x4fvCallback glUniformMatrix3x4fv;
using glUniformMatrix4dvCallback = void (*)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value);
extern glUniformMatrix4dvCallback glUniformMatrix4dv;
using glUniformMatrix4fvCallback = void (*)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value);
extern glUniformMatrix4fvCallback glUniformMatrix4fv;
using glUniformMatrix4x2dvCallback = void (*)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value);
extern glUniformMatrix4x2dvCallback glUniformMatrix4x2dv;
using glUniformMatrix4x2fvCallback = void (*)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value);
extern glUniformMatrix4x2fvCallback glUniformMatrix4x2fv;
using glUniformMatrix4x3dvCallback = void (*)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value);
extern glUniformMatrix4x3dvCallback glUniformMatrix4x3dv;
using glUniformMatrix4x3fvCallback = void (*)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value);
extern glUniformMatrix4x3fvCallback glUniformMatrix4x3fv;
using glUniformSubroutinesuivCallback = void (*)(GLenum shadertype,GLsizei count,const GLuint * indices);
extern glUniformSubroutinesuivCallback glUniformSubroutinesuiv;
using glUnmapBufferCallback = GLboolean (*)(GLenum target);
extern glUnmapBufferCallback glUnmapBuffer;
using glUnmapNamedBufferCallback = GLboolean (*)(GLuint buffer);
extern glUnmapNamedBufferCallback glUnmapNamedBuffer;
using glUseProgramCallback = void (*)(GLuint program);
extern glUseProgramCallback glUseProgram;
using glUseProgramStagesCallback = void (*)(GLuint pipeline,GLbitfield stages,GLuint program);
extern glUseProgramStagesCallback glUseProgramStages;
using glValidateProgramCallback = void (*)(GLuint program);
extern glValidateProgramCallback glValidateProgram;
using glValidateProgramPipelineCallback = void (*)(GLuint pipeline);
extern glValidateProgramPipelineCallback glValidateProgramPipeline;
using glVertex2dCallback = void (*)(GLdouble x,GLdouble y);
extern glVertex2dCallback glVertex2d;
using glVertex2dvCallback = void (*)(const GLdouble * v);
extern glVertex2dvCallback glVertex2dv;
using glVertex2fCallback = void (*)(GLfloat x,GLfloat y);
extern glVertex2fCallback glVertex2f;
using glVertex2fvCallback = void (*)(const GLfloat * v);
extern glVertex2fvCallback glVertex2fv;
using glVertex2iCallback = void (*)(GLint x,GLint y);
extern glVertex2iCallback glVertex2i;
using glVertex2ivCallback = void (*)(const GLint * v);
extern glVertex2ivCallback glVertex2iv;
using glVertex2sCallback = void (*)(GLshort x,GLshort y);
extern glVertex2sCallback glVertex2s;
using glVertex2svCallback = void (*)(const GLshort * v);
extern glVertex2svCallback glVertex2sv;
using glVertex3dCallback = void (*)(GLdouble x,GLdouble y,GLdouble z);
extern glVertex3dCallback glVertex3d;
using glVertex3dvCallback = void (*)(const GLdouble * v);
extern glVertex3dvCallback glVertex3dv;
using glVertex3fCallback = void (*)(GLfloat x,GLfloat y,GLfloat z);
extern glVertex3fCallback glVertex3f;
using glVertex3fvCallback = void (*)(const GLfloat * v);
extern glVertex3fvCallback glVertex3fv;
using glVertex3iCallback = void (*)(GLint x,GLint y,GLint z);
extern glVertex3iCallback glVertex3i;
using glVertex3ivCallback = void (*)(const GLint * v);
extern glVertex3ivCallback glVertex3iv;
using glVertex3sCallback = void (*)(GLshort x,GLshort y,GLshort z);
extern glVertex3sCallback glVertex3s;
using glVertex3svCallback = void (*)(const GLshort * v);
extern glVertex3svCallback glVertex3sv;
using glVertex4dCallback = void (*)(GLdouble x,GLdouble y,GLdouble z,GLdouble w);
extern glVertex4dCallback glVertex4d;
using glVertex4dvCallback = void (*)(const GLdouble * v);
extern glVertex4dvCallback glVertex4dv;
using glVertex4fCallback = void (*)(GLfloat x,GLfloat y,GLfloat z,GLfloat w);
extern glVertex4fCallback glVertex4f;
using glVertex4fvCallback = void (*)(const GLfloat * v);
extern glVertex4fvCallback glVertex4fv;
using glVertex4iCallback = void (*)(GLint x,GLint y,GLint z,GLint w);
extern glVertex4iCallback glVertex4i;
using glVertex4ivCallback = void (*)(const GLint * v);
extern glVertex4ivCallback glVertex4iv;
using glVertex4sCallback = void (*)(GLshort x,GLshort y,GLshort z,GLshort w);
extern glVertex4sCallback glVertex4s;
using glVertex4svCallback = void (*)(const GLshort * v);
extern glVertex4svCallback glVertex4sv;
using glVertexArrayAttribBindingCallback = void (*)(GLuint vaobj,GLuint attribindex,GLuint bindingindex);
extern glVertexArrayAttribBindingCallback glVertexArrayAttribBinding;
using glVertexArrayAttribFormatCallback = void (*)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset);
extern glVertexArrayAttribFormatCallback glVertexArrayAttribFormat;
using glVertexArrayAttribIFormatCallback = void (*)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset);
extern glVertexArrayAttribIFormatCallback glVertexArrayAttribIFormat;
using glVertexArrayAttribLFormatCallback = void (*)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset);
extern glVertexArrayAttribLFormatCallback glVertexArrayAttribLFormat;
using glVertexArrayBindingDivisorCallback = void (*)(GLuint vaobj,GLuint bindingindex,GLuint divisor);
extern glVertexArrayBindingDivisorCallback glVertexArrayBindingDivisor;
using glVertexArrayElementBufferCallback = void (*)(GLuint vaobj,GLuint buffer);
extern glVertexArrayElementBufferCallback glVertexArrayElementBuffer;
using glVertexArrayVertexBufferCallback = void (*)(GLuint vaobj,GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride);
extern glVertexArrayVertexBufferCallback glVertexArrayVertexBuffer;
using glVertexArrayVertexBuffersCallback = void (*)(GLuint vaobj,GLuint first,GLsizei count,const GLuint * buffers,const GLintptr * offsets,const GLsizei * strides);
extern glVertexArrayVertexBuffersCallback glVertexArrayVertexBuffers;
using glVertexAttrib1dCallback = void (*)(GLuint index,GLdouble x);
extern glVertexAttrib1dCallback glVertexAttrib1d;
using glVertexAttrib1dvCallback = void (*)(GLuint index,const GLdouble * v);
extern glVertexAttrib1dvCallback glVertexAttrib1dv;
using glVertexAttrib1fCallback = void (*)(GLuint index,GLfloat x);
extern glVertexAttrib1fCallback glVertexAttrib1f;
using glVertexAttrib1fvCallback = void (*)(GLuint index,const GLfloat * v);
extern glVertexAttrib1fvCallback glVertexAttrib1fv;
using glVertexAttrib1sCallback = void (*)(GLuint index,GLshort x);
extern glVertexAttrib1sCallback glVertexAttrib1s;
using glVertexAttrib1svCallback = void (*)(GLuint index,const GLshort * v);
extern glVertexAttrib1svCallback glVertexAttrib1sv;
using glVertexAttrib2dCallback = void (*)(GLuint index,GLdouble x,GLdouble y);
extern glVertexAttrib2dCallback glVertexAttrib2d;
using glVertexAttrib2dvCallback = void (*)(GLuint index,const GLdouble * v);
extern glVertexAttrib2dvCallback glVertexAttrib2dv;
using glVertexAttrib2fCallback = void (*)(GLuint index,GLfloat x,GLfloat y);
extern glVertexAttrib2fCallback glVertexAttrib2f;
using glVertexAttrib2fvCallback = void (*)(GLuint index,const GLfloat * v);
extern glVertexAttrib2fvCallback glVertexAttrib2fv;
using glVertexAttrib2sCallback = void (*)(GLuint index,GLshort x,GLshort y);
extern glVertexAttrib2sCallback glVertexAttrib2s;
using glVertexAttrib2svCallback = void (*)(GLuint index,const GLshort * v);
extern glVertexAttrib2svCallback glVertexAttrib2sv;
using glVertexAttrib3dCallback = void (*)(GLuint index,GLdouble x,GLdouble y,GLdouble z);
extern glVertexAttrib3dCallback glVertexAttrib3d;
using glVertexAttrib3dvCallback = void (*)(GLuint index,const GLdouble * v);
extern glVertexAttrib3dvCallback glVertexAttrib3dv;
using glVertexAttrib3fCallback = void (*)(GLuint index,GLfloat x,GLfloat y,GLfloat z);
extern glVertexAttrib3fCallback glVertexAttrib3f;
using glVertexAttrib3fvCallback = void (*)(GLuint index,const GLfloat * v);
extern glVertexAttrib3fvCallback glVertexAttrib3fv;
using glVertexAttrib3sCallback = void (*)(GLuint index,GLshort x,GLshort y,GLshort z);
extern glVertexAttrib3sCallback glVertexAttrib3s;
using glVertexAttrib3svCallback = void (*)(GLuint index,const GLshort * v);
extern glVertexAttrib3svCallback glVertexAttrib3sv;
using glVertexAttrib4NbvCallback = void (*)(GLuint index,const GLbyte * v);
extern glVertexAttrib4NbvCallback glVertexAttrib4Nbv;
using glVertexAttrib4NivCallback = void (*)(GLuint index,const GLint * v);
extern glVertexAttrib4NivCallback glVertexAttrib4Niv;
using glVertexAttrib4NsvCallback = void (*)(GLuint index,const GLshort * v);
extern glVertexAttrib4NsvCallback glVertexAttrib4Nsv;
using glVertexAttrib4NubCallback = void (*)(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w);
extern glVertexAttrib4NubCallback glVertexAttrib4Nub;
using glVertexAttrib4NubvCallback = void (*)(GLuint index,const GLubyte * v);
extern glVertexAttrib4NubvCallback glVertexAttrib4Nubv;
using glVertexAttrib4NuivCallback = void (*)(GLuint index,const GLuint * v);
extern glVertexAttrib4NuivCallback glVertexAttrib4Nuiv;
using glVertexAttrib4NusvCallback = void (*)(GLuint index,const GLushort * v);
extern glVertexAttrib4NusvCallback glVertexAttrib4Nusv;
using glVertexAttrib4bvCallback = void (*)(GLuint index,const GLbyte * v);
extern glVertexAttrib4bvCallback glVertexAttrib4bv;
using glVertexAttrib4dCallback = void (*)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w);
extern glVertexAttrib4dCallback glVertexAttrib4d;
using glVertexAttrib4dvCallback = void (*)(GLuint index,const GLdouble * v);
extern glVertexAttrib4dvCallback glVertexAttrib4dv;
using glVertexAttrib4fCallback = void (*)(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w);
extern glVertexAttrib4fCallback glVertexAttrib4f;
using glVertexAttrib4fvCallback = void (*)(GLuint index,const GLfloat * v);
extern glVertexAttrib4fvCallback glVertexAttrib4fv;
using glVertexAttrib4ivCallback = void (*)(GLuint index,const GLint * v);
extern glVertexAttrib4ivCallback glVertexAttrib4iv;
using glVertexAttrib4sCallback = void (*)(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w);
extern glVertexAttrib4sCallback glVertexAttrib4s;
using glVertexAttrib4svCallback = void (*)(GLuint index,const GLshort * v);
extern glVertexAttrib4svCallback glVertexAttrib4sv;
using glVertexAttrib4ubvCallback = void (*)(GLuint index,const GLubyte * v);
extern glVertexAttrib4ubvCallback glVertexAttrib4ubv;
using glVertexAttrib4uivCallback = void (*)(GLuint index,const GLuint * v);
extern glVertexAttrib4uivCallback glVertexAttrib4uiv;
using glVertexAttrib4usvCallback = void (*)(GLuint index,const GLushort * v);
extern glVertexAttrib4usvCallback glVertexAttrib4usv;
using glVertexAttribBindingCallback = void (*)(GLuint attribindex,GLuint bindingindex);
extern glVertexAttribBindingCallback glVertexAttribBinding;
using glVertexAttribDivisorCallback = void (*)(GLuint index,GLuint divisor);
extern glVertexAttribDivisorCallback glVertexAttribDivisor;
using glVertexAttribFormatCallback = void (*)(GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset);
extern glVertexAttribFormatCallback glVertexAttribFormat;
using glVertexAttribI1iCallback = void (*)(GLuint index,GLint x);
extern glVertexAttribI1iCallback glVertexAttribI1i;
using glVertexAttribI1ivCallback = void (*)(GLuint index,const GLint * v);
extern glVertexAttribI1ivCallback glVertexAttribI1iv;
using glVertexAttribI1uiCallback = void (*)(GLuint index,GLuint x);
extern glVertexAttribI1uiCallback glVertexAttribI1ui;
using glVertexAttribI1uivCallback = void (*)(GLuint index,const GLuint * v);
extern glVertexAttribI1uivCallback glVertexAttribI1uiv;
using glVertexAttribI2iCallback = void (*)(GLuint index,GLint x,GLint y);
extern glVertexAttribI2iCallback glVertexAttribI2i;
using glVertexAttribI2ivCallback = void (*)(GLuint index,const GLint * v);
extern glVertexAttribI2ivCallback glVertexAttribI2iv;
using glVertexAttribI2uiCallback = void (*)(GLuint index,GLuint x,GLuint y);
extern glVertexAttribI2uiCallback glVertexAttribI2ui;
using glVertexAttribI2uivCallback = void (*)(GLuint index,const GLuint * v);
extern glVertexAttribI2uivCallback glVertexAttribI2uiv;
using glVertexAttribI3iCallback = void (*)(GLuint index,GLint x,GLint y,GLint z);
extern glVertexAttribI3iCallback glVertexAttribI3i;
using glVertexAttribI3ivCallback = void (*)(GLuint index,const GLint * v);
extern glVertexAttribI3ivCallback glVertexAttribI3iv;
using glVertexAttribI3uiCallback = void (*)(GLuint index,GLuint x,GLuint y,GLuint z);
extern glVertexAttribI3uiCallback glVertexAttribI3ui;
using glVertexAttribI3uivCallback = void (*)(GLuint index,const GLuint * v);
extern glVertexAttribI3uivCallback glVertexAttribI3uiv;
using glVertexAttribI4bvCallback = void (*)(GLuint index,const GLbyte * v);
extern glVertexAttribI4bvCallback glVertexAttribI4bv;
using glVertexAttribI4iCallback = void (*)(GLuint index,GLint x,GLint y,GLint z,GLint w);
extern glVertexAttribI4iCallback glVertexAttribI4i;
using glVertexAttribI4ivCallback = void (*)(GLuint index,const GLint * v);
extern glVertexAttribI4ivCallback glVertexAttribI4iv;
using glVertexAttribI4svCallback = void (*)(GLuint index,const GLshort * v);
extern glVertexAttribI4svCallback glVertexAttribI4sv;
using glVertexAttribI4ubvCallback = void (*)(GLuint index,const GLubyte * v);
extern glVertexAttribI4ubvCallback glVertexAttribI4ubv;
using glVertexAttribI4uiCallback = void (*)(GLuint index,GLuint x,GLuint y,GLuint z,GLuint w);
extern glVertexAttribI4uiCallback glVertexAttribI4ui;
using glVertexAttribI4uivCallback = void (*)(GLuint index,const GLuint * v);
extern glVertexAttribI4uivCallback glVertexAttribI4uiv;
using glVertexAttribI4usvCallback = void (*)(GLuint index,const GLushort * v);
extern glVertexAttribI4usvCallback glVertexAttribI4usv;
using glVertexAttribIFormatCallback = void (*)(GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset);
extern glVertexAttribIFormatCallback glVertexAttribIFormat;
using glVertexAttribIPointerCallback = void (*)(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer);
extern glVertexAttribIPointerCallback glVertexAttribIPointer;
using glVertexAttribL1dCallback = void (*)(GLuint index,GLdouble x);
extern glVertexAttribL1dCallback glVertexAttribL1d;
using glVertexAttribL1dvCallback = void (*)(GLuint index,const GLdouble * v);
extern glVertexAttribL1dvCallback glVertexAttribL1dv;
using glVertexAttribL2dCallback = void (*)(GLuint index,GLdouble x,GLdouble y);
extern glVertexAttribL2dCallback glVertexAttribL2d;
using glVertexAttribL2dvCallback = void (*)(GLuint index,const GLdouble * v);
extern glVertexAttribL2dvCallback glVertexAttribL2dv;
using glVertexAttribL3dCallback = void (*)(GLuint index,GLdouble x,GLdouble y,GLdouble z);
extern glVertexAttribL3dCallback glVertexAttribL3d;
using glVertexAttribL3dvCallback = void (*)(GLuint index,const GLdouble * v);
extern glVertexAttribL3dvCallback glVertexAttribL3dv;
using glVertexAttribL4dCallback = void (*)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w);
extern glVertexAttribL4dCallback glVertexAttribL4d;
using glVertexAttribL4dvCallback = void (*)(GLuint index,const GLdouble * v);
extern glVertexAttribL4dvCallback glVertexAttribL4dv;
using glVertexAttribLFormatCallback = void (*)(GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset);
extern glVertexAttribLFormatCallback glVertexAttribLFormat;
using glVertexAttribLPointerCallback = void (*)(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer);
extern glVertexAttribLPointerCallback glVertexAttribLPointer;
using glVertexAttribP1uiCallback = void (*)(GLuint index,GLenum type,GLboolean normalized,GLuint value);
extern glVertexAttribP1uiCallback glVertexAttribP1ui;
using glVertexAttribP1uivCallback = void (*)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value);
extern glVertexAttribP1uivCallback glVertexAttribP1uiv;
using glVertexAttribP2uiCallback = void (*)(GLuint index,GLenum type,GLboolean normalized,GLuint value);
extern glVertexAttribP2uiCallback glVertexAttribP2ui;
using glVertexAttribP2uivCallback = void (*)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value);
extern glVertexAttribP2uivCallback glVertexAttribP2uiv;
using glVertexAttribP3uiCallback = void (*)(GLuint index,GLenum type,GLboolean normalized,GLuint value);
extern glVertexAttribP3uiCallback glVertexAttribP3ui;
using glVertexAttribP3uivCallback = void (*)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value);
extern glVertexAttribP3uivCallback glVertexAttribP3uiv;
using glVertexAttribP4uiCallback = void (*)(GLuint index,GLenum type,GLboolean normalized,GLuint value);
extern glVertexAttribP4uiCallback glVertexAttribP4ui;
using glVertexAttribP4uivCallback = void (*)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value);
extern glVertexAttribP4uivCallback glVertexAttribP4uiv;
using glVertexAttribPointerCallback = void (*)(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,const void * pointer);
extern glVertexAttribPointerCallback glVertexAttribPointer;
using glVertexBindingDivisorCallback = void (*)(GLuint bindingindex,GLuint divisor);
extern glVertexBindingDivisorCallback glVertexBindingDivisor;
using glVertexP2uiCallback = void (*)(GLenum type,GLuint value);
extern glVertexP2uiCallback glVertexP2ui;
using glVertexP2uivCallback = void (*)(GLenum type,const GLuint * value);
extern glVertexP2uivCallback glVertexP2uiv;
using glVertexP3uiCallback = void (*)(GLenum type,GLuint value);
extern glVertexP3uiCallback glVertexP3ui;
using glVertexP3uivCallback = void (*)(GLenum type,const GLuint * value);
extern glVertexP3uivCallback glVertexP3uiv;
using glVertexP4uiCallback = void (*)(GLenum type,GLuint value);
extern glVertexP4uiCallback glVertexP4ui;
using glVertexP4uivCallback = void (*)(GLenum type,const GLuint * value);
extern glVertexP4uivCallback glVertexP4uiv;
using glVertexPointerCallback = void (*)(GLint size,GLenum type,GLsizei stride,const void * pointer);
extern glVertexPointerCallback glVertexPointer;
using glViewportCallback = void (*)(GLint x,GLint y,GLsizei width,GLsizei height);
extern glViewportCallback glViewport;
using glViewportArrayvCallback = void (*)(GLuint first,GLsizei count,const GLfloat * v);
extern glViewportArrayvCallback glViewportArrayv;
using glViewportIndexedfCallback = void (*)(GLuint index,GLfloat x,GLfloat y,GLfloat w,GLfloat h);
extern glViewportIndexedfCallback glViewportIndexedf;
using glViewportIndexedfvCallback = void (*)(GLuint index,const GLfloat * v);
extern glViewportIndexedfvCallback glViewportIndexedfv;
using glWaitSyncCallback = void (*)(GLsync sync,GLbitfield flags,GLuint64 timeout);
extern glWaitSyncCallback glWaitSync;
using glWindowPos2dCallback = void (*)(GLdouble x,GLdouble y);
extern glWindowPos2dCallback glWindowPos2d;
using glWindowPos2dvCallback = void (*)(const GLdouble * v);
extern glWindowPos2dvCallback glWindowPos2dv;
using glWindowPos2fCallback = void (*)(GLfloat x,GLfloat y);
extern glWindowPos2fCallback glWindowPos2f;
using glWindowPos2fvCallback = void (*)(const GLfloat * v);
extern glWindowPos2fvCallback glWindowPos2fv;
using glWindowPos2iCallback = void (*)(GLint x,GLint y);
extern glWindowPos2iCallback glWindowPos2i;
using glWindowPos2ivCallback = void (*)(const GLint * v);
extern glWindowPos2ivCallback glWindowPos2iv;
using glWindowPos2sCallback = void (*)(GLshort x,GLshort y);
extern glWindowPos2sCallback glWindowPos2s;
using glWindowPos2svCallback = void (*)(const GLshort * v);
extern glWindowPos2svCallback glWindowPos2sv;
using glWindowPos3dCallback = void (*)(GLdouble x,GLdouble y,GLdouble z);
extern glWindowPos3dCallback glWindowPos3d;
using glWindowPos3dvCallback = void (*)(const GLdouble * v);
extern glWindowPos3dvCallback glWindowPos3dv;
using glWindowPos3fCallback = void (*)(GLfloat x,GLfloat y,GLfloat z);
extern glWindowPos3fCallback glWindowPos3f;
using glWindowPos3fvCallback = void (*)(const GLfloat * v);
extern glWindowPos3fvCallback glWindowPos3fv;
using glWindowPos3iCallback = void (*)(GLint x,GLint y,GLint z);
extern glWindowPos3iCallback glWindowPos3i;
using glWindowPos3ivCallback = void (*)(const GLint * v);
extern glWindowPos3ivCallback glWindowPos3iv;
using glWindowPos3sCallback = void (*)(GLshort x,GLshort y,GLshort z);
extern glWindowPos3sCallback glWindowPos3s;
using glWindowPos3svCallback = void (*)(const GLshort * v);
extern glWindowPos3svCallback glWindowPos3sv;

#endif // RF_SYSTEM_DRAWING_OPENGLCONSTANTS_HPP