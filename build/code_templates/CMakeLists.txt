macro(GenerateIncludes variable files)
	foreach(includefile ${files})
		STRING(REGEX REPLACE "${CMAKE_CURRENT_SOURCE_DIR}/include/" "" escaped_includefile ${includefile}) 
		set(${variable} "${${variable}}\n#include <${escaped_includefile}>")
	endforeach()
endmacro()

LIST(LENGTH RADONFRAMEWORK_BLACKLIST RADONFRAMEWORK_BLACKLISTCOUNT)

message(STATUS "Generate ${RADONFRAMEWORK_LOCATION}/include/RadonFramework/RadonInline.hpp")
AddHeaderDirectoryRecursive(filelist "include/RadonFramework/Reflection" "Includes\\Reflection")
if(${RADONFRAMEWORK_BLACKLISTCOUNT} GREATER 0)
    list(REMOVE_ITEM filelist ${RADONFRAMEWORK_BLACKLIST})
endif()
GenerateIncludes(INCLUDES_REFLECTION "${filelist}")

AddHeaderDirectoryRecursive(filelist "include/RadonFramework/Collections" "Includes\\Collections")
if(${RADONFRAMEWORK_BLACKLISTCOUNT} GREATER 0)
    list(REMOVE_ITEM filelist ${RADONFRAMEWORK_BLACKLIST})
endif()
GenerateIncludes(INCLUDES_COLLECTIONS "${filelist}")

AddHeaderDirectoryRecursive(filelist "include/RadonFramework/Core" "Includes\\Core")
if(${RADONFRAMEWORK_BLACKLISTCOUNT} GREATER 0)
    list(REMOVE_ITEM filelist ${RADONFRAMEWORK_BLACKLIST})
endif()
GenerateIncludes(INCLUDES_CORE "${filelist}")

AddHeaderDirectoryRecursive(filelist "include/RadonFramework/Diagnostics" "Includes\\Diagnostics")
if(${RADONFRAMEWORK_BLACKLISTCOUNT} GREATER 0)
    list(REMOVE_ITEM filelist ${RADONFRAMEWORK_BLACKLIST})
endif()
GenerateIncludes(INCLUDES_DIAGNOSTICS "${filelist}")

AddHeaderDirectoryRecursive(filelist "include/RadonFramework/Math" "Includes\\Math")
if(${RADONFRAMEWORK_BLACKLISTCOUNT} GREATER 0)
    list(REMOVE_ITEM filelist ${RADONFRAMEWORK_BLACKLIST})
endif()
GenerateIncludes(INCLUDES_MATH "${filelist}")

AddHeaderDirectoryRecursive(filelist "include/RadonFramework/IO" "Includes\\IO")
if(${RADONFRAMEWORK_BLACKLISTCOUNT} GREATER 0)
    list(REMOVE_ITEM filelist ${RADONFRAMEWORK_BLACKLIST})
endif()
GenerateIncludes(INCLUDES_IO "${filelist}")

AddHeaderDirectoryRecursive(filelist "include/RadonFramework/Memory" "Includes\\Memory")
if(${RADONFRAMEWORK_BLACKLISTCOUNT} GREATER 0)
    list(REMOVE_ITEM filelist ${RADONFRAMEWORK_BLACKLIST})
endif()
GenerateIncludes(INCLUDES_MEMORY "${filelist}")

AddHeaderDirectoryRecursive(filelist "include/RadonFramework/System" "Includes\\System")
if(${RADONFRAMEWORK_BLACKLISTCOUNT} GREATER 0)
    list(REMOVE_ITEM filelist ${RADONFRAMEWORK_BLACKLIST})
endif()
GenerateIncludes(INCLUDES_SYSTEM "${filelist}")

AddHeaderDirectoryRecursive(filelist "include/RadonFramework/Threading" "Includes\\Threading")
if(${RADONFRAMEWORK_BLACKLISTCOUNT} GREATER 0)
    list(REMOVE_ITEM filelist ${RADONFRAMEWORK_BLACKLIST})
endif()
GenerateIncludes(INCLUDES_THREADING "${filelist}")

AddHeaderDirectoryRecursive(filelist "include/RadonFramework/Time" "Includes\\Time")
if(${RADONFRAMEWORK_BLACKLISTCOUNT} GREATER 0)
    list(REMOVE_ITEM filelist ${RADONFRAMEWORK_BLACKLIST})
endif()
GenerateIncludes(INCLUDES_TIME "${filelist}")

AddHeaderDirectoryRecursive(filelist "include/RadonFramework/Net" "Includes\\Net")
if(${RADONFRAMEWORK_BLACKLISTCOUNT} GREATER 0)
    list(REMOVE_ITEM filelist ${RADONFRAMEWORK_BLACKLIST})
endif()
GenerateIncludes(INCLUDES_NET "${filelist}")

AddHeaderDirectoryRecursive(filelist "include/RadonFramework/Drawing" "Includes\\Drawing")
if(${RADONFRAMEWORK_BLACKLISTCOUNT} GREATER 0)
    list(REMOVE_ITEM filelist ${RADONFRAMEWORK_BLACKLIST})
endif()
GenerateIncludes(INCLUDES_DRAWING "${filelist}")

AddHeaderDirectoryRecursive(filelist "include/RadonFramework/Text" "Includes\\Text")
if(${RADONFRAMEWORK_BLACKLISTCOUNT} GREATER 0)
    list(REMOVE_ITEM filelist ${RADONFRAMEWORK_BLACKLIST})
endif()
GenerateIncludes(INCLUDES_TEXT "${filelist}")

configure_file("${RADONFRAMEWORK_LOCATION}/build/code_templates/RadonInline.hxx" "${RADONFRAMEWORK_LOCATION}/include/RadonFramework/RadonInline.hpp" @ONLY)

message(STATUS "Generate ${RADONFRAMEWORK_LOCATION}/include/RadonFramework/Defines.hpp")
configure_file("${RADONFRAMEWORK_LOCATION}/build/code_templates/Defines.hxx" "${RADONFRAMEWORK_LOCATION}/include/RadonFramework/Defines.hpp" @ONLY)

set(RADONFRAMEWORK_ENDIANNESS ${${CMAKE_PROJECT_NAME}_ENDIANNESS})
set(RADONFRAMEWORK_COMPILEDFORARCHITECTURE ${${CMAKE_PROJECT_NAME}_COMPILEDFORARCHITECTURE})
message(STATUS "Generate ${RADONFRAMEWORK_LOCATION}/src/System/CompilerConfig.cpp")
configure_file("${RADONFRAMEWORK_LOCATION}/build/code_templates/CompilerConfig.cxx" "${RADONFRAMEWORK_LOCATION}/src/System/CompilerConfig.cpp" @ONLY)

message(STATUS "Generate ${RADONFRAMEWORK_LOCATION}/include/RadonFramework/Math/Geometry/QuatF32.hpp")
set(GuardName "QUATF32")
set(ClassName "QuatF32")
set(ClassType "RF_Type::Float32")
set(MathType "Float32")
configure_file("${RADONFRAMEWORK_LOCATION}/build/code_templates/Quaternion.hxx" "${RADONFRAMEWORK_LOCATION}/include/RadonFramework/Math/Geometry/QuatF32.hpp" @ONLY)
configure_file("${RADONFRAMEWORK_LOCATION}/build/code_templates/Quaternion.cxx" "${RADONFRAMEWORK_LOCATION}/src/Math/Geometry/QuatF32.cpp" @ONLY)

message(STATUS "Generate ${RADONFRAMEWORK_LOCATION}/include/RadonFramework/Math/Geometry/QuatF64.hpp")
set(GuardName "QUATF64")
set(ClassName "QuatF64")
set(ClassType "RF_Type::Float64")
set(MathType "Float64")
configure_file("${RADONFRAMEWORK_LOCATION}/build/code_templates/Quaternion.hxx" "${RADONFRAMEWORK_LOCATION}/include/RadonFramework/Math/Geometry/QuatF64.hpp" @ONLY)
configure_file("${RADONFRAMEWORK_LOCATION}/build/code_templates/Quaternion.cxx" "${RADONFRAMEWORK_LOCATION}/src/Math/Geometry/QuatF64.cpp" @ONLY)